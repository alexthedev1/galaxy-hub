-- This file was generated using Luraph Obfuscator v13.5.6

do return(function(Jx,Dx,Wx,ux,Tx,Yx,Qx,fx,Ax,rx,ix,tx,ox,sx,Fx,Zx,Kx,Lx,ex,gx,ax,yx,px,wx,xx,Gx,Nx,Ux,Ox,Cx,Hx,zx,mx,dx,Xx,jx,Ix,Bx,Sx,E,...)local kx=0x0;local q,W,m,c=nil,nil,nil,nil;while kx<=3 do if kx<=0X001 then if kx==0x0 then q=Fx;do kx=0X3;end;else m=Qx;kx=0X2;end;elseif kx~=2 then W=Wx;do kx=1;end;else c=ox;kx=0X004;end;end;kx=0X0001;local v,l,F,Q,R,Y=nil,nil,nil,nil,nil,nil;while true do if kx<=2 then if not(kx<=0X0)then do if kx~=0X1 then do l=string.sub;end;kx=0x0003;else v=Yx;kx=0x02;end;end;else do R=Hx;end;kx=0X0004;end;else do if not(kx<=3)then if kx~=0X00004 then Q=tx.gsub;kx=0;else Y=table.insert;break;end;else F=Jx;kx=0X5;end;end;end;end;local z=next;local t,bx=rawget,(zx);kx=0X003;local g,H,h,Rx,vx,U=nil,nil,nil,nil,nil,nil;repeat if not(kx<=2)then do if not(kx<=4)then if kx==5 then do U=4294967296;end;kx=7;else do H=gx;end;kx=0;end;elseif kx==3 then g=Ix.yield;kx=2;else Rx=function(...)return q('#',...),{...};end;kx=1;end;end;else do if kx<=0x00 then h=string.byte;do kx=0X004;end;else if kx==1 then vx={};kx=0x005;else kx=0x6;end;end;end;end;until kx>6;local O=(m and m()or Ax);local x={[0X00000]=0X1};kx=0;local f,K=nil,(nil);while kx<2 do if kx==0 then fkx=1;else K=(Lx or bit32);kx=2;end;end;local N=(1);kx=1;local C,B,j,o,Z=nil,nil,nil,nil,nil;repeat if kx<=0x00002 then if not(kx<=0)then do if kx==0x0001 then kx=0x5;else do Z={0X0005,3,0X2};end;do break;end;end;end;else o=tx.match;kx=2;end;else if kx<=3 then j=0x80000000;kx=0;else if kx~=4 then f=Q(l(f,0x5),".\046",function(Mx)if h(Mx,mx)~=0X48 then local sV,FV=0x0000,nil;do while sV<0X2 do if sV==0x0 then FV=F(R(Mx,16));sV=0x0001;else if not(C)then return FV;else local EO=W(FV,C);C=nil;return EO;end;do sV=2;end;end;end;end;else for PS=0X0,0X001 do if PS==0X0 then C=R(l(Mx,1,1));else return"";end;end;end;end);do kx=0X0004;end;else do B=function()local bF=(h(f,N,N));N=N+zx;return bF;end;end;kx=0X3;end;end;end;until false;local J=Ox;local a=(U-1);do local XA=(0X2);for Lm=1,31 do(x)[Lm]=XA;XA=XA*2;end;end;local i,y=function(ad,bd,md)local sd=0X1;local Md=(nil);while true do if not(sd<=0)then do if sd==0X01 then Md=(ad/x[bd])%x[md];do sd=0X0;end;else return Md;end;end;else Md=Md-Md%1;sd=2;end;end;end,j-0X1;local u=2^0x34;local T=function()local Qb,Ub,kb,Ab=h(f,N,N+0X3);N=N+4;return Ab*0x01000000+kb*Nx+Ub*0X0100+Qb;end;local D=function()local a4,h4,t4=0X0001,nil,(nil);while 0.8995019841485216 do do if a4<=0X0 then if not(t4>=j)then else t4=t4-U;end;a4=2;else do if a4==1 then do h4,t4=T(),T();end;a4=0X00000;else return t4*U+h4;end;end;end;end;end;end;local p=({[0]={[0X0]=0X0000,0X1,0X2,3,0X4,5,6,0x7,0X00008,0X09,10,fx,12,13,0XE,15},{[0]=1,0,3,0X2,5,Cx,0x7,6,0x9,0X8,11,10,0XD,Bx,15,0X0E},{[Tx]=2,0X03,0x0,0X1,6,0X7,0X004,0x005,10,11,0X8,9,0X000E,15,0X000C,0Xd},{[0X0000]=jx,0X2,0X1,0x00,0X0007,0X6,5,4,0XB,0Xa,9,Ux,0X0000f,0XE,13,12},{[0X0000]=Cx,0X5,0X6,7,0x00,1,2,3,12,13,14,0Xf,8,0X9,10,0X00B},{[0]=0x5,0X4,0X7,6,0X1,0x0,3,2,13,0Xc,0Xf,14,9,8,11,10},{[0]=0X6,ux,Cx,0X5,2,jx,0,1,14,0X0F,0XC,13,10,0XB,0X8,0X9},{[0]=0x7,0X0006,0X005,4,0X0003,0X002,1,0X0,0Xf,0Xe,13,0X000c,0XB,ax,9,8},{[0X0]=8,0X9,10,fx,0Xc,0Xd,0x0000E,15,0,0X01,0X0002,0x003,4,5,0X6,0X7},{[0X0]=9,8,0XB,0xA,0x000d,0Xc,0X000F,0Xe,0x1,0,3,mx,5,Cx,0X7,0X0006},{[0]=ax,0XB,0X8,0X9,14,15,12,13,2,0X003,0,0X001,0x006,7,Cx,5},{[Tx]=11,0Xa,9,0X08,0X0f,14,13,12,3,0x2,zx,0X0,0X7,yx,0X5,4},{[0]=0X0c,0Xd,xx,0XF,0X8,9,10,11,Cx,0x5,6,ux,0,1,0X2,0X003},{[0]=13,0x000c,15,xx,0x9,0X08,0x0B,10,5,4,0X07,0X6,0x1,0X00,3,0X2},{[0]=0X0e,0X000f,12,0x000d,10,0X0b,0X8,9,6,0X00007,4,ix,2,0X3,0,0x1},{[0X0]=15,0X0000E,0x00D,Bx,0XB,0X00A,0X9,8,ux,6,0X005,0x4,0X3,2,1,0X0}});local r=(function()local te,le,Be,de,Se,Le=1,nil,nil,nil,nil,(nil);while te<0x00006 do if te<=2 then if not(te<=0)then do if te~=1 then do de=(-0X1)^i(Be,0X1F,0X0001);end;te=0;else do le=T();end;te=4;end;end;else Se=i(Be,0X14,0xB);te=0X0003;end;else if te<=0X3 then Le=1;te=0x6;else do if te==4 then Be=T();do te=0x5;end;else if not(le==0x0 and Be==0)then else return 0X0;end;te=2;end;end;end;end;end;local Fe=i(Be,0X000,0X000014)*U+le;do if Se==0X00 then if Fe~=0X0000 then local Q8=0X1;while(true)do if Q8~=0X0 then Se=0X1;Q8=0;else Le=0X0;break;end;end;else return de*0X0;end;elseif Se~=2047 then else if Fe~=0X0000 then return de*(1/0);else return de*(0X00000/0);end;end;end;return de*(2^(Se-0X0003FF))*(Fe/u+Le);end);local s=K and K.bxor or function(Fj,Jj)local fj=(0X5);local tj,Mj=nil,(nil);repeat do if not(fj<=0x2)then if fj<=0x0003 then do tj=zx;end;fj=0X000;else if fj==4 then Jj=Jj%U;fj=3;else do Fj=Fj%U;end;fj=0X4;end;end;else if not(fj<=0)then if fj~=1 then while Fj>0 and Jj>Tx do local JI,NI,nI=0,nil,(nil);do repeat do if JI~=0x0 then nI=Jj%16;JI=0x2;else NI=Fj%0x10;JI=0X1;end;end;until JI>1;end;JI=0x03;while JI<0X004 do if not(JI<=1)then if JI~=0X02 then do Mj=Mj+p[NI][nI]*tj;end;do JI=1;end;else tj=tj*16;do JI=4;end;end;else if JI~=0 then do Fj=(Fj-NI)/16;end;JI=0;else Jj=(Jj-nI)/0X10;do JI=0X2;end;end;end;end;end;fj=1;else do return Mj+Fj*tj+Jj*tj;end;end;else do Mj=0X0;end;do fj=0X002;end;end;end;end;until false;end;local S=K and K.band or function(Yj,mj)local kj=(2);do while true do if not(kj<=0X0000)then if kj==1 then return((Yj+mj)-s(Yj,mj))/2;else do Yj=Yj%U;end;kj=0;end;else mj=mj%U;kj=0x01;end;end;end;end;local e=K and K[Dx]or function(R3,u3)for Kw=0,0X2 do do if Kw<=0 then R3=R3%U;else do if Kw==1 then u3=u3%U;else return a-S(a-R3,a-u3);end;end;end;end;end;end;local X,w=K and K[rx],K and K.rshift;local G=(K and K.bnot or function(Wu)do return a-(Wu%U);end;end);kx=0X00;repeat if kx~=0X0 then do w=w or function(BR,TR)local jR,RR=1,(nil);repeat if jR<=1 then if jR~=0X0 then if not(TR>=0x0020)then else return 0X00000;end;jR=0;else if TR<0 then return X(BR,-TR);end;jR=0X03;end;else if jR==0X0002 then return RR-RR%1;else RR=(BR%U/x[TR]);jR=2;end;end;until false;end;end;do kx=2;end;else do X=X or function(y1,F1)for gn=0,2 do if gn<=0X000 then if F1>=0X20 then return 0X0;end;elseif gn~=0X00001 then do return(y1*x[F1])%U;end;else if F1<0 then return w(y1,-F1);end;end;end;end;end;kx=0x0001;end;until kx>0X001;local A=unpack or px.unpack;kx=0;local k,d,M=nil,nil,(nil);while kx~=0X003 do do if not(kx<=0)then if kx==0X1 then M=function()local dw=k();if dw>y then do return dw-U;end;end;return dw;end;do kx=3;end;else d={[0X0]=5,[2]=ux,[0x7]=0X1,[8]=0X0,[0X9]=0X8,[0X7]=9,[3]=4,[5]=6};kx=1;end;else k=function()local nF=0X0;local vF=0x0000;do repeat local hq=h(f,N,N);do N=N+1;end;nF=e(nF,X(S(hq,127),vF));if S(hq,0X80)==0x0 then do return nF;end;end;vF=vF+0X7;until false;end;end;kx=2;end;end;end;local Ex=B();local P=error;local Vx=B();do kx=3;end;local nx,qx,I,cx=nil,nil,nil,(nil);while kx<4 do if not(kx<=0X001)then do if kx~=0X2 then nx=function(bd)local qd,Sd,Td,Hd,id=0X2,nil,nil,nil,(nil);while qd~=0X04 do if not(qd<=1)then if qd~=2 then id=s(Sd[jx],Vx);qd=4;else do Sd={h(f,N,N+0X3)};end;qd=0;end;else do if qd~=0 then Hd=s(Sd[2],Vx);do qd=0X3;end;else do Td=s(Sd[1],Vx);end;qd=1;end;end;end;end;local Ld=s(Sd[4],Vx);do Vx=(0X25*Vx+bd)%256;end;qd=0x0;while(true)do if qd==0 then N=N+4;qd=0x00001;else return Ld*16777216+id*0X10000+Hd*0X100+Td;end;end;end;kx=2;else qx=function(qo)local uo,Ro,Ho=0X3,nil,(nil);do while uo<=0X3 do do if uo<=0X1 then if uo==0X000 then for sQ=1,Ro,0x1F3d do local yQ=sQ+0X0001f3d-1;do if not(yQ>Ro)then else do yQ=Ro;end;end;end;local jQ=({h(f,N+sQ-0X001,N+yQ-zx)});local MQ=0X000;while(true)do if MQ~=0X0000 then Ho=Ho..F(A(jQ));break;else do for l9=1,#jQ do jQ[l9]=s(jQ[l9],Ex);Ex=(qo*Ex+0X71)%0x100;end;end;do MQ=1;end;end;end;end;uo=1;else do N=N+Ro;end;uo=0X4;end;else if uo==2 then Ho=Kx;uo=0X0;else Ro=T();uo=0x2;end;end;end;end;end;return Ho;end;kx=0x00001;end;end;elseif kx~=0 then do I=sx;end;do kx=0X0;end;else cx={};kx=4;end;end;local L=(setfenv);kx=1;local V,b=nil,nil;while kx~=0X3 do do if kx<=0X0000 then kx=0X3;else if kx==1 then do V=Sx;end;kx=0x2;else b=ex;kx=0X0;end;end;end;end;local function Px(WO,QO,DO)local bO,aO,MO,UO,RO,dO=QO[8],QO[0X1],QO[4],QO[0X02],QO[3],(QO[0X5]);local vO=(QO[7]);local VO=(QO[0X9]);local rO=(J({},{__mode="v"}));local nO=nil;nO=function(...)local pu=({});local Pu=1;local Ju=(m and m()or _ENV);local su=0;local zu,Hu=Rx(...);local wu=(Ju==O and DO or Ju);local nu={[2]=QO,[1]=pu};zu=zu-1;for kf=0,zu do do if aO>kf then do(pu)[kf]=Hu[kf+1];end;else do break;end;end;end;end;if not RO then Hu=nil;else if not(dO)then else do pu[aO]={n=zu>=aO and zu-aO+0X0001 or 0,A(Hu,aO+0x0001,zu+0X1)};end;end;end;do if wu==Ju then elseif L then L(nO,wu);else do _ENV=wu;end;end;end;local ku,Xu,yu,vu=c(function()repeat local RK=VO[Pu];local PK=RK[0X001];Pu=Pu+0x1;do if PK<0X2E then if not(PK<0X017)then if not(PK<0x022)then if not(PK>=40)then if PK<0X000025 then if PK>=35 then do if PK~=36 then pu[RK[3]]=s(pu[RK[2]],pu[RK[5]]);else repeat local sg,Tg=rO,(pu);if#sg>0X0 then local tT=({});for t9,P9 in z,sg do for e0,p0 in z,P9 do do if not(p0[1]==Tg and p0[2]>=0x0)then else local Gy=p0[2];if not tT[Gy]then tT[Gy]={Tg[Gy]};end;p0[0X001]=tT[Gy];p0[2]=1;end;end;end;end;end;until true;return true,RK[0x3],1;end;end;else do pu[RK[0X003]]=e(pu[RK[0X0002]],pu[RK[0X5]]);end;end;else if not(PK<38)then if PK~=39 then local eD=(RK[0x3]);local uD,RD=pu[eD]();do if uD then for UK=0X1,RK[5]do(pu)[eD+UK]=RD[UK];end;Pu=RK[2];end;end;else(pu)[RK[3]]=pu[RK[2]]==pu[RK[5]];end;else do(pu)[RK[0x3]]=pu[RK[0X002]];end;end;end;else if not(PK<0x2B)then do if not(PK>=0x2C)then(pu)[RK[0X3]]=not pu[RK[2]];else if PK==45 then(pu)[RK[0X3]]=S(pu[RK[2]],pu[RK[5]]);else pu[RK[3]]=pu[RK[2]]*pu[RK[5]];end;end;end;else do if not(PK>=41)then pu[RK[0X3]]=#pu[RK[2]];else if PK==0X02a then do pu[RK[0X0003]]=X(pu[RK[0X02]],pu[RK[0X5]]);end;else if pu[RK[0X003]]then Pu=RK[2];end;end;end;end;end;end;else if PK>=0X1c then if PK>=0x0001f then if PK>=0X000020 then if PK==0X00021 then do pu[RK[3]]=pu[RK[2]]<=pu[RK[5]];end;else pu[RK[0X0003]][pu[RK[0X2]]]=RK[0X6];end;else nu[RK[2]]=pu[RK[0x3]];end;else if not(PK<0X001D)then if PK==0X0001E then if RK[5]==0X00c2 then Pu=Pu-1;VO[Pu]={[0x2]=(RK[2]-0x42),[3]=(RK[3]-0X00042),[1]=65};else repeat local dG,yG=rO,pu;if#dG>0X0 then local M2={};for qg,Mg in z,dG do do for uo,Po in z,Mg do do if not(Po[0x1]==yG and Po[0X2]>=0)then else local As=(Po[2]);do if not(not M2[As])then else(M2)[As]={yG[As]};end;end;(Po)[0X01]=M2[As];(Po)[0X2]=1;end;end;end;end;end;end;until true;local Yl=(RK[3]);do return false,Yl,Yl;end;end;else pu[RK[0x3]]=false;end;else do(pu)[RK[0X00003]]={};end;end;end;else if not(PK>=0X19)then if PK==24 then local wq=RK[0X3];local Yq,kq=pu[wq],(pu[wq+0X1]);local vq=pu[wq+2];(pu)[wq]=I(function()for qt=Yq,kq,vq do g(true,qt);end;end);do Pu=RK[2];end;else local jL=(RK[3]);local LL,EL=pu[jL]();if LL then(pu)[jL+1]=EL;do Pu=RK[2];end;end;end;else if not(PK<26)then if PK~=0x001b then pu[RK[3]]=pu[RK[0X2]]+pu[RK[5]];else pu[RK[3]]=pu[RK[2]]^pu[RK[5]];end;else local hd,Zd=RK[0X3],RK[2];do if Zd~=0 then su=hd+Zd-1;end;end;local kd,Nd,Fd=RK[0X005],nil,nil;if Zd~=1 then Nd,Fd=Rx(pu[hd](A(pu,hd+0X1,su)));else Nd,Fd=Rx(pu[hd]());end;if kd==1 then su=hd-1;else if kd==0x00000 then Nd=Nd+hd-0X1;su=Nd;else Nd=hd+kd-0X00002;su=Nd+0X001;end;local NE=0X00;do for xG=hd,Nd do NE=NE+1;pu[xG]=Fd[NE];end;end;end;end;end;end;end;else if PK>=0X00b then do if PK<0X11 then if not(PK<0X000E)then if PK>=15 then if PK==0x10 then do(pu)[RK[0X3]]=RK[7];end;else if RK[5]==148 then Pu=Pu-0X1;do VO[Pu]={[0X00003]=(RK[3]-73),[1]=1,[2]=(RK[2]-73)};end;else(pu)[RK[3]]=nil;end;end;else if RK[5]==0xf0 then Pu=Pu-0x1;do VO[Pu]={[0X1]=37,[2]=(RK[2]-100),[3]=(RK[0X3]-0X64)};end;elseif RK[5]~=111 then repeat local ch,Sh=rO,(pu);if not(#ch>0X00)then else local gO={};for LT,iT in z,ch do for st,ct in z,iT do if ct[1]==Sh and ct[0x0002]>=0X0 then local Fi=(ct[2]);if not(not gO[Fi])then else do(gO)[Fi]={Sh[Fi]};end;end;ct[0x0001]=gO[Fi];(ct)[2]=0X001;end;end;end;end;until true;return;else do Pu=Pu-1;end;VO[Pu]={[3]=(RK[3]-0xE1),[0x2]=(RK[2]-0xe1),[1]=15};end;end;else do if PK>=0XC then if PK==13 then(pu)[RK[3]]=pu[RK[2]]/pu[RK[5]];else local n_=(RK[0X3]);(pu)[n_]=pu[n_](pu[n_+0X0001],pu[n_+0X00002]);su=n_;end;else do pu[RK[0X3]]=G(pu[RK[2]]);end;end;end;end;else do if PK>=20 then do if PK>=21 then if PK~=22 then local E_=RK[3];pu[E_]=pu[E_](pu[E_+1]);su=E_;else(pu[RK[3]])[RK[0x7]]=RK[0X6];end;else do su=RK[0x3];end;(pu[su])();su=su-0X00001;end;end;else if not(PK>=18)then pu[RK[0x00003]]=pu[RK[0x00002]][RK[0X6]];else do if PK~=19 then local nt,kt=RK[3],RK[0X00002];do su=nt+kt-1;end;repeat local dZ,NZ=rO,pu;if#dZ>0 then local bP=({});for nF,GF in z,dZ do for Aj,nj in z,GF do if nj[0x1]==NZ and nj[2]>=0 then local jG=nj[0x00002];if not bP[jG]then(bP)[jG]={NZ[jG]};end;(nj)[1]=bP[jG];nj[2]=1;end;end;end;end;until true;return true,nt,kt;else(pu)[RK[0X3]]=nu[RK[2]];end;end;end;end;end;end;end;else do if not(PK<0X005)then if not(PK<8)then if PK<0X00009 then pu[RK[0x3]]={A({},0X01,RK[0X2])};else if PK==0XA then(pu)[RK[0X3]]=true;else if not(pu[RK[2]]<=pu[RK[0X5]])then Pu=RK[0X00003];end;end;end;else if PK>=6 then if PK==0X7 then local pK=RK[3];do for Jf=pK,pK+(RK[0X2]-0x1)do do(pu)[Jf]=Hu[aO+(Jf-pK)+1];end;end;end;else local kd=RK[0X3];local Zd=(I(function(...)g();for uP,KP,JP,MP,pP,eP,OP,UP,NP,tP in...do g(true,{uP,KP,JP,MP,pP,eP,OP,UP,NP,tP});end;end));(Zd)(pu[kd],pu[kd+0X1],pu[kd+0x002]);su=kd;pu[kd]=Zd;Pu=RK[0x2];end;else local rD=(RK[3]);local LD=(I(function(...)g();for zo in...do(g)(true,zo);end;end));(LD)(pu[rD],pu[rD+1],pu[rD+0x2]);su=rD;(pu)[rD]=LD;Pu=RK[0x2];end;end;else do if PK<2 then do if PK~=0X1 then local KO=(RK[3]);(pu[KO])(pu[KO+1],pu[KO+2]);su=KO-1;else repeat local le,ie=rO,pu;if#le>0X0 then local a_=({});for e_,w_ in z,le do for CY,ZY in z,w_ do if not(ZY[0X1]==ie and ZY[2]>=0)then else local Us=(ZY[0X02]);if not a_[Us]then(a_)[Us]={ie[Us]};end;do ZY[0x1]=a_[Us];end;(ZY)[2]=1;end;end;end;end;until true;return false,RK[0X03],su;end;end;else if not(PK<3)then if PK~=0X0004 then local d4=(RK[0X003]);do su=d4+RK[0X2]-1;end;pu[d4](A(pu,d4+1,su));do su=d4-0X01;end;else local Tw=RK[3];(pu[Tw])(A(pu,Tw+1,su));su=Tw-1;end;else(pu)[RK[0X0003]]=pu[RK[2]]%pu[RK[0X5]];end;end;end;end;end;end;end;elseif not(PK>=0X0045)then if not(PK<0x39)then if not(PK>=0X3F)then if not(PK<60)then if PK>=61 then if PK==62 then local j4=(RK[3]);local h4=(pu[RK[2]]);do pu[j4+0X1]=h4;end;pu[j4]=h4[RK[0x6]];else pu[RK[0X3]]=vx[RK[2]];end;else if RK[0X5]==209 then Pu=Pu-0X1;VO[Pu]={[0x0002]=(RK[2]-0Xf3),[1]=37,[3]=(RK[0X3]-243)};else if not pu[RK[0x00003]]then Pu=RK[0X2];end;end;end;else do if not(PK<58)then if PK==0X003b then if RK[0X05]~=140 then do(pu)[RK[3]]=-pu[RK[2]];end;else Pu=Pu-0X1;VO[Pu]={[2]=(RK[2]-0x77),[3]=(RK[3]-119),[0X0001]=15};end;else do(pu[RK[0x0003]])[RK[7]]=pu[RK[5]];end;end;else Pu=RK[0x02];end;end;end;else do if PK>=0x0042 then if PK>=0X43 then if PK==68 then local ZU=pu[RK[2]]/pu[RK[0X005]];do pu[RK[3]]=ZU-ZU%1;end;else do if RK[5]==0x078 then Pu=Pu-1;VO[Pu]={[0X2]=(RK[0X2]-0X5e),[0X3]=(RK[0X3]-0X5e),[0X00001]=65};elseif RK[5]~=107 then do repeat local z8,G8,A8=rO,pu,RK[0X3];if not(#z8>0)then else local P3={};for Vj,Ej in z,z8 do for lH,BH in z,Ej do if not(BH[1]==G8 and BH[0X002]>=A8)then else local pe=BH[0X2];do if not(not P3[pe])then else(P3)[pe]={G8[pe]};end;end;BH[0X001]=P3[pe];(BH)[0X0002]=0X01;end;end;end;end;until true;end;else do Pu=Pu-1;end;VO[Pu]={[0X01]=0x041,[0X02]=(RK[0X2]-51),[3]=(RK[3]-51)};end;end;end;else if pu[RK[2]]==RK[0X0006]then do Pu=RK[3];end;end;end;else do if not(PK>=64)then(pu)[RK[0x3]]=RK[0X7];else do if PK~=0X41 then if pu[RK[2]]==RK[6]then else Pu=RK[3];end;else local Ld,ad=zu-aO,(RK[0x00003]);do if Ld<0 then Ld=-0x1;end;end;for Jg=ad,ad+Ld do(pu)[Jg]=Hu[aO+(Jg-ad)+0X00001];end;do su=ad+Ld;end;end;end;end;end;end;end;end;else if not(PK>=51)then if not(PK>=48)then if PK~=47 then do pu[RK[3]]=pu[RK[2]]<pu[RK[0X5]];end;else su=RK[3];pu[su]=pu[su]();end;else if PK>=0X31 then if PK~=0X0032 then(pu)[RK[3]]=pu[RK[0X2]]~=RK[0x00006];else local Ub=RK[0X02];local Tb=pu[Ub];do for iQ=Ub+1,RK[5]do Tb=Tb..pu[iQ];end;end;pu[RK[0x3]]=Tb;end;else local xU=RK[0X3];local UU=(I(function(...)(g)();for Bm,Im in...do(g)(true,Bm,Im);end;end));UU(pu[xU],pu[xU+1],pu[xU+0X002]);su=xU;do(pu)[xU]=UU;end;Pu=RK[2];end;end;else if not(PK>=0X000036)then do if not(PK<0X000034)then if PK~=0X35 then do pu[RK[0x3]]=wu[RK[0x007]];end;else local Py=WO[RK[0X2]];(pu)[RK[3]]=Py[0X1][Py[2]];end;else local On=(RK[0X3]);pu[On]=pu[On](A(pu,On+0X1,su));su=On;end;end;else do if PK<55 then local b1=(RK[3]);local Z1,d1=pu[b1]();do if not(Z1)then else Pu=RK[2];pu[b1+0x3]=d1;end;end;else do if PK==0X000038 then local ay=WO[RK[0X2]];do(ay[1])[ay[2]]=pu[RK[3]];end;else do repeat local ik,Nk=rO,(pu);do if not(#ik>0)then else local r0={};do for OA,QA in z,ik do for Xw,rw in z,QA do if not(rw[1]==Nk and rw[0X2]>=0x0)then else local Dh=(rw[2]);if not r0[Dh]then r0[Dh]={Nk[Dh]};end;rw[0X1]=r0[Dh];(rw)[2]=1;end;end;end;end;end;end;until true;end;return true,RK[0X3],0X0;end;end;end;end;end;end;end;else do if PK>=81 then do if PK>=87 then do if not(PK<0X5A)then if PK>=0x5B then if PK==92 then if pu[RK[2]]~=pu[RK[5]]then else Pu=RK[3];end;else(wu)[RK[0X07]]=pu[RK[0X3]];end;else local fV=RK[3];local eV=pu[fV];local tV=((RK[5]-1)*50);for yk=0X1,RK[2]do eV[tV+yk]=pu[fV+yk];end;end;else if PK>=0X00058 then if PK==0X59 then if RK[5]==0X0083 then Pu=Pu-0X1;(VO)[Pu]={[0x00001]=37,[0X2]=(RK[0X2]-191),[0X3]=(RK[0X003]-191)};elseif RK[0x5]==0X005 then Pu=Pu-1;VO[Pu]={[2]=(RK[2]-40),[0X03]=(RK[3]-0X28),[1]=0X01};elseif RK[0X00005]==62 then Pu=Pu-0X1;VO[Pu]={[0X001]=0X57,[0X2]=(RK[0X2]-0X00D2),[0X3]=(RK[0x3]-210)};elseif RK[5]==0X79 then Pu=Pu-1;VO[Pu]={[0X0003]=(RK[3]-0X000dA),[2]=(RK[2]-0XdA),[1]=0X3b};else for GO=RK[3],RK[2]do(pu)[GO]=nil;end;end;else local sy=RK[3];pu[sy](pu[sy+0X1]);su=sy-1;end;else do repeat local Mx,ZD=rO,pu;do if not(#Mx>0X0)then else local X4=({});for HG,iG in z,Mx do for C3,k3 in z,iG do if not(k3[1]==ZD and k3[0X0002]>=0)then else local C0=(k3[0X0002]);if not(not X4[C0])then else(X4)[C0]={ZD[C0]};end;(k3)[1]=X4[C0];(k3)[0X2]=0X01;end;end;end;end;end;until true;end;local AN=(RK[3]);return false,AN,AN+RK[0X2]-0X2;end;end;end;else do if not(PK<0X54)then do if not(PK<0X00055)then do if PK~=86 then if not(pu[RK[2]]<pu[RK[0X005]])then else do Pu=RK[0x3];end;end;else(vx)[RK[0X2]]=pu[RK[3]];end;end;else local Ch,zh=RK[3],((RK[5]-1)*50);local Ih=pu[Ch];for VB=1,su-Ch do Ih[zh+VB]=pu[Ch+VB];end;end;end;else if PK<0X52 then local ew=(RK[0X3]);su=ew+RK[0X2]-0X001;pu[ew]=pu[ew](A(pu,ew+0X1,su));su=ew;else if PK==0X53 then if not(pu[RK[0X2]]<=RK[6])then Pu=RK[0X0003];end;else(pu[RK[0X3]])[pu[RK[2]]]=pu[RK[5]];end;end;end;end;end;end;else if not(PK<75)then do if not(PK<0x00004e)then if not(PK<79)then do if PK==0x50 then pu[RK[3]]=pu[RK[0X00002]][pu[RK[5]]];else if pu[RK[0X2]]==pu[RK[5]]then else Pu=RK[0X0003];end;end;end;else(pu)[RK[3]]=pu[RK[2]]-pu[RK[5]];end;else if not(PK>=76)then pu[RK[3]]=pu[RK[2]]>pu[RK[5]];else if PK~=0X0004d then local oE=RK[2];(pu)[RK[0X3]]=pu[oE]..pu[oE+0x0001];else(pu)[RK[0X3]]=pu[RK[2]]~=pu[RK[5]];end;end;end;end;else if PK<72 then if PK<70 then(pu)[RK[0X3]]=pu[RK[0x002]]%RK[6];else if PK==71 then pu[RK[0x0003]]=w(pu[RK[2]],pu[RK[0X005]]);else pu[RK[0X3]]=pu[RK[0x02]]>=pu[RK[5]];end;end;else do if not(PK>=73)then local r_=bO[RK[2]];local M_=(r_[6]);local o_=nil;local Y_=#M_;if not(Y_>0X0)then else do o_={};end;for Ne=1,Y_ do local Je=(M_[Ne]);if Je[1]==0 then o_[Ne-0X1]={pu,Je[2]};else o_[Ne-0X1]=WO[Je[2]];end;end;(Y)(rO,o_);end;(pu)[RK[0X03]]=Px(o_,r_,wu);else if PK~=0x004a then local OQ=RK[3];local oQ,ZQ,yQ=pu[OQ]();do if oQ then(pu)[OQ+1]=ZQ;pu[OQ+0x2]=yQ;Pu=RK[2];end;end;else do if not(pu[RK[2]]<pu[RK[0X5]])then do Pu=RK[3];end;end;end;end;end;end;end;end;end;end;end;end;until false;end);if ku then if Xu then if vu~=1 then return pu[yu](A(pu,yu+1,su));else do return pu[yu]();end;end;elseif yu then do return A(pu,yu,vu);end;end;else if b(Xu)~="string"then(P)(Xu,0X0);else if o(Xu,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(o(Xu,"^.-:%d+: "))then(P)(Xu,0);else P("Luraph Script:"..(UO[Pu-1]or"\040\105\110tern\097\108\041")..": "..v(Xu),0);end;end;end;end;if not(L)then else L(nO,DO);end;do return nO;end;end;local function lx()local Dp,Np,np=0x1,nil,(nil);while Dp~=3 do if not(Dp<=0)then if Dp~=1 then np={};Dp=3;else Dp=0;end;else do Np={};end;do Dp=2;end;end;end;local ep,rp,mp,Vp=nil,nil,nil,(nil);for qP=0X0,4 do do if qP<=1 then do if qP==0x0 then ep={nil,{},Gx,nil,nil,nil,Gx,{},{}};else rp=0X00001;end;end;else if not(qP<=0X2)then if qP~=3 then Vp=B();else mp=T()-0XB0Bd;end;else do(ep)[0x0000E]=T();end;end;end;end;end;local up,Ap,Ip=nil,nil,(nil);for Na=0,0X0006 do if not(Na<=2)then if Na<=4 then if Na~=3 then for zm=1,k()do np[zm]={B(),k()};end;else do ep[6]=np;end;end;elseif Na==5 then do Ip=T();end;else do for lW=0X0001,Ip do local KW,HW,tW,OW=0X2,nil,nil,(nil);while KW<3 do if KW<=0 then tW=T();KW=0X1;else if KW~=0X1 then HW=T();do KW=0;end;else OW=T();KW=0X3;end;end;end;for HS=HW,tW do do ep[0X02][HS]=OW;end;end;end;end;end;else do if not(Na<=0)then if Na==1 then Ap=B()~=0X0;else for uN=1,mp do local dN,NN,tN=nil,nil,nil;for aP=0,5 do do if aP<=2 then if aP<=0X00 then dN=B();else if aP==0X1 then NN=nil;else do Np[uN-1]=rp;end;end;end;elseif not(aP<=0X3)then do if aP~=4 then do(up)[rp]=tN;end;else tN={NN,{}};end;end;else if dN==174 then NN=l(qx(Vp),B());elseif dN==0XFC then NN=l(qx(Vp),ux);elseif dN==0x000098 then do NN=Xx;end;elseif dN==0x000086 then NN=l(qx(Vp),ux);elseif dN==36 then NN=l(qx(Vp),r()+T());elseif dN==97 then NN=l(qx(Vp),0x5);elseif dN==0XB0 then NN=l(qx(Vp),ux);elseif dN==0X000dE then NN=r();elseif dN==70 then NN=r()+T();elseif dN==76 then NN=D();elseif dN==23 then NN=wx;elseif dN==0X0 then NN=l(qx(Vp),T());elseif dN==138 then NN=r();end;end;end;end;do rp=rp+1;end;if Ap then local e_=(0X0);while e_<=1 do if e_==0 then(cx)[bx]=tN;do e_=1;end;else do bx=bx+0X1;end;do e_=2;end;end;end;end;end;end;else up={};end;end;end;end;do ep[0X0f]=B();end;local Fp=T()-42798;local Kp=(ep[8]);Dp=0X0;repeat if Dp<=0 then for kN=0X00000,Fp-0X1 do(Kp)[kN]=lx();end;do Dp=1;end;else do if Dp~=0X1 then ep[12]=B();Dp=0x3;else ep[0X13]=B();Dp=2;end;end;end;until Dp==3;local pp=(nil);local Lp=ep[0X9];for Nd=0X0,0X4 do if not(Nd<=0X1)then do if not(Nd<=2)then if Nd~=3 then do(ep)[17]=T();end;else do(ep)[13]=B();end;end;else ep[zx]=k();end;end;elseif Nd==0x0 then pp=T()-Zx;else for Mx=1,pp do(Lp)[Mx]={[7]=B(),[0X0005]=M(),[4]=B(),[6]=B(),[1]=k(),[3]=M(),[mx]=M()};end;end;end;(ep)[7]=k();local lp=(nil);for l0=0X0,0X003 do if not(l0<=1)then do if l0~=2 then do(ep)[0X5]=i(lp,mx,1)~=0;end;else(ep)[3]=i(lp,1,zx)~=0;end;end;else if l0~=0X0 then lp=B();else for WR=1,pp do local RR=nil;for hR=0X00000,1 do do if hR==0X0 then RR=ep[0X9][WR];else do for lh,Vh in dx(Z)do local qh=d[Vh];local Ph=RR[qh];if Ph==0x1 then local JX=(0x1);local dX,bX=nil,(nil);do repeat if JX<=0 then do if bX then RR[qh]=bX[1];local YF=(bX[mx]);(YF)[#YF+0X00001]={RR,qh};end;end;JX=0X03;else if JX~=0X1 then bX=up[dX];JX=0X000;else do dX=Np[RR[Vh]];end;JX=0X2;end;end;until JX>0X2;end;elseif Ph~=12 then else RR[Vh]=WR+RR[Vh]+1;end;end;end;end;end;end;end;end;end;end;do(ep)[4]=k();end;return ep;end;local hx=lx();vx[1]=cx;for Xm=0X00000,1 do if Xm==0X0000 then cx=nil;else return Px(Gx,hx,O)(...);end;end;end)(string.char,"\098o\114",string.rep,7,0X0,tostring,getfenv,0X0000B,_ENV,"ls\104\105\102t",5,string,pcall,coroutine.wrap,select,8962,"",bit,type,rawset,10,0X6,table,false,14,nil,65536,8,setmetatable,0X4,tonumber,1,2,ipairs,true,3,coroutine,12,assert,{25413,1282002018,169192245,0X000D26e842a,2154118431,0X7fE185Da,1452391979,304381354,0xDD13120E},...);end;
