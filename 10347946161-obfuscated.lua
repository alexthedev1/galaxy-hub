-- This file was generated using Luraph Obfuscator v13.5.6

return(function(UF,BK,gK,vF,bK,QK,PK,kK,MK,uK,DK,iK,CK,qK,OK,nK,AK,FK,zK,WK,EF,rK,VK,IK,YK,fK,KK,yK,tK,JK,NK,xK,XK,oF,lK,SF,mK,TK,HK,wK,aK,eF,ZK,hK,cK,pK,sK,v,...)local RF,E,U,R,C,j,z,T,S,o,Q,W,w,H,l,M,g,V,t=0x000010,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);repeat if RF<=0X0008 then if not(RF<=0X00003)then if not(RF<=5)then if RF<=6 then C={[0]=0X1};RF=0x008;else do if RF~=7 then j=gK;do RF=0X4;end;else w=VK;RF=0;end;end;end;else if RF==4 then z=2^52;RF=3;else R=wK;RF=6;end;end;else if RF<=0X0001 then if RF==0 then H=IK;RF=2;else S=HK;do RF=14;end;end;else if RF==2 then do l=tK;end;RF=0X00d;else do T=2147483648;end;do RF=0X00001;end;end;end;end;else do if not(RF<=0xD)then if RF<=0xF then if RF==14 then o=xK;RF=15;else Q=BK;do RF=11;end;end;else do if RF<=16 then do E=QK;end;RF=12;else if RF==17 then g=ZK;do RF=0X0A;end;else do RF=0X13;end;end;end;end;end;else do if not(RF<=10)then do if not(RF<=11)then if RF~=12 then do M=DK;end;RF=17;else U=lK;RF=0X5;end;else W=1;do RF=7;end;end;end;else do if RF==0X9 then t=YK;do RF=0X12;end;else V=MK;RF=9;end;end;end;end;end;end;end;until RF>=0X13;local d,k,L=WK.char,(bit or bit32),(string.byte);local Y=(M and M()or FK);local e=aK;RF=0X0;local F,a,r=nil,nil,nil;repeat if not(RF<=0X1)then if RF~=2 then RF=0X2;else F=l(j(F,0X5),'\046.',function(dW)if L(dW,0X2)==0X48 then for bT=0,1 do do if bT==0X0 then a=o(j(dW,1,rK));else return JK;end;end;end;else local J5=d(o(dW,0X10));do if a then local rB=Q(J5,a);do for L7=0,1 do if L7~=0x0 then return rB;else a=TK;end;end;end;else return J5;end;end;end;end);RF=0X1;end;else if RF~=0X00000 then do r=function()local tS=(L(F,W,W));local NS=(0X0000);while 0.10477284507275186 do if NS==0 then W=W+0X1;NS=1;else do return tS;end;end;end;end;end;RF=0X4;elseend;end;until RF>=0X04;do RF=1;end;local x,y,J,m=nil,nil,nil,(nil);do while RF<=3 do if RF<=1 then if RF==0 then do J=function()local KW,sW,ZW,dW=nil,nil,nil,(nil);for af=0,0X00002 do do if not(af<=0X00)then if af~=0x1 then return dW*16777216+ZW*65536+sW*0X0100+KW;else W=W+4;end;else KW,sW,ZW,dW=L(F,W,W+zK);end;end;end;end;end;RF=3;else x=yK;do RF=2;end;end;else if RF==0X002 then y=0x100000000;RF=0X0;else m=y-1;do RF=4;end;end;end;end;end;local c=nil;local i=(T-0x1);local G,D=mK,unpack or iK;for pa=0,0X1 do if pa==0 then do local T0=2;do for sT=1,0X01F do local kT=(0x1);while kT<=0x00001 do if kT==0 then T0=T0*0x2;kT=2;else C[sT]=T0;kT=0x0;end;end;end;end;end;else c=function(Ds,rs,Us)local Os=(0x0);local Ws=(nil);repeat if Os<=0x0 then Ws=(Ds/C[rs])%C[Us];Os=1;elseif Os~=0x1 then return Ws;else Ws=Ws-Ws%1;Os=0X2;end;until false;end;end;end;local X=(function()local Nt,Bt,Vt=0X0,nil,(nil);repeat if Nt==0X00 then do Bt,Vt=J(),J();end;do Nt=0X1;end;else if not(Vt>=T)then else Vt=Vt-y;end;break;end;until false;return Vt*y+Bt;end);local q=({[CK]={[0X0]=0,rK,nK,zK,4,0X00005,6,0X7,8,cK,10,XK,0Xc,13,14,0x000F},{[0X000]=0X1,0,0X3,nK,0X5,4,7,hK,9,0X8,0Xb,0X000A,13,12,15,0X00E},{[0]=2,zK,0,0X01,6,qK,4,5,0XA,11,8,9,14,15,12,0XD},{[0x000]=zK,2,0X0001,0x0,qK,hK,5,4,11,0Xa,9,0X8,0X0f,kK,0X000d,12},{[0]=4,0X00005,0X06,7,CK,1,0X2,0x3,12,13,0Xe,0Xf,8,9,0XA,11},{[CK]=5,0X4,7,6,0X1,0,0x0003,0X002,13,0Xc,15,14,0x9,8,11,10},{[CK]=6,7,4,5,0X2,3,0,0x1,14,0X000F,12,0XD,bK,0X0000b,0X8,cK},{[0]=7,6,5,4,0x3,2,1,0X0,15,0XE,13,NK,XK,0X0A,9,0X8},{[0]=8,0X9,0Xa,0Xb,0xC,0X000D,14,15,0,0X01,2,3,0x4,0X5,6,7},{[0]=0x9,0X0008,11,0XA,13,12,0XF,14,1,0,0X3,0X2,0X5,0X04,0X7,6},{[0]=0Xa,XK,8,0X0009,0XE,15,0X00C,13,0x0002,0X3,0,0X1,6,qK,4,5},{[0]=0XB,10,0x0009,8,0x000F,0X000e,0Xd,0Xc,0X3,0x0002,0X1,0X00,0X007,hK,0X00005,0X4},{[0X0]=12,0XD,0x000E,0Xf,8,0X009,0X0a,0XB,4,0x005,6,7,0,1,0X2,3},{[0]=13,12,0X0F,0X0000e,0X0009,8,0x000b,0XA,5,4,0X7,6,1,0,3,0X00002},{[0X0]=0X00e,0x000f,0XC,0Xd,0xa,0Xb,8,0X9,0x6,7,4,5,2,3,0X00000,0X1},{[0]=0Xf,14,13,0XC,0XB,10,9,8,7,0x00006,0X5,0X4,0X3,0X2,1,0X0}});local h=(function()local ju=(0);local zu,Hu,Mu=nil,nil,(nil);do while ju~=4 do do if ju<=0x1 then if ju==0X0 then zu=J();do ju=3;end;else Mu=J();do ju=0x2;end;end;else if ju~=2 then Hu=0X1;ju=1;else if not(zu==0X00 and Mu==0)then else do return 0X0;end;end;ju=4;end;end;end;end;end;local Au=((-0X0001)^c(Mu,0X1F,1));local bu=(c(Mu,0x14,0X0000b));local eu=c(Mu,0X0,0X14)*y+zu;do if bu==0 then if eu==CK then return Au*0X00000;else local aJ=0;while aJ<2 do if aJ~=0 then do Hu=0X0;end;aJ=2;else bu=0X1;do aJ=0X01;end;end;end;end;else if bu~=0X007ff then else if eu==0X00 then do return Au*(0/0X0000);end;else return Au*(0x1/0X0);end;end;end;end;return Au*(0X2^(bu-0X3FF))*(eu/z+Hu);end);local b=(k and k[uK]or function(zh,Rh)local sh,Qh=nil,nil;do for AC=0,0X0005 do do if AC<=2 then if not(AC<=0)then do if AC~=1 then do sh=0X1;end;else Rh=Rh%y;end;end;else zh=zh%y;end;else if AC<=0X3 then do Qh=0X00000;end;else if AC==4 then while zh>0X0 and Rh>0X0 do local G8=(zh%0X10);local r8=(Rh%16);Qh=Qh+q[G8][r8]*sh;zh=(zh-G8)/16;for Db=0,0x1 do if Db==0X0 then Rh=(Rh-r8)/AK;else sh=sh*0x10;end;end;end;else do return Qh+zh*sh+Rh*sh;end;end;end;end;end;end;end;end);local N=k and k[KK]or function(BN,cN)do for pn=0X000,0X2 do if pn<=0 then BN=BN%y;else if pn~=0X1 then return((BN+cN)-b(BN,cN))/2;else cN=cN%y;end;end;end;end;end;local u=(k and k.bor or function(sB,eB)local bB=(1);while true do if not(bB<=0)then if bB~=0X1 then eB=eB%y;bB=0;else sB=sB%y;bB=2;end;else return m-N(m-sB,m-eB);end;end;end);local A,K,O=k and k[OK]or function(tJ)do return m-(tJ%y);end;end,nil,nil;for xi=0,0x1 do if xi~=0X0 then O=k and k.rshift;else do K=k and k.lshift;end;end;end;K=K or function(EQ,MQ)if MQ>=0X20 then return 0;end;local XQ=(0);while true do do if XQ==0x0 then do if not(MQ<0)then else do return O(EQ,-MQ);end;end;end;XQ=1;else do return(EQ*C[MQ])%y;end;end;end;end;end;local eK,GK,f,p=nil,nil,nil,nil;for zw=0,4 do if not(zw<=0x1)then if zw<=2 then GK={};elseif zw~=0X3 then p=function()local rB=(0);local EB=(0X0);do while true do local HG=(L(F,W,W));W=W+0x1;do EB=u(EB,K(N(HG,127),rB));end;do if N(HG,128)==0X0000 then return EB;end;end;rB=rB+7;end;end;end;else f={[1]=3,[8]=0X4,[5]=6,[zK]=4,[8]=3,[0X7]=CK,[0X4]=4,[PK]=3,[0X8]=7,[1]=0X0000,[0x00008]=8,[2]=7};end;else if zw~=0 then O=O or function(wW,uW)if not(uW>=32)then else return 0X0;end;if uW<0 then do return K(wW,-uW);end;end;local MW=((wW%y/C[uW]));return MW-MW%1;end;else do eK={};end;end;end;end;local vK=(r());local SK=(r());local EK=function(qg)local Hg=(0);local ug,hg=nil,(nil);while Hg~=0X2 do if Hg==0 then do ug={L(F,W,W+0X3)};end;Hg=0X0001;else hg=b(ug[1],SK);Hg=2;end;end;local pg=(b(ug[2],SK));local Pg=b(ug[0X3],SK);local Lg=b(ug[0X004],SK);Hg=0x1;while 0.06893818668346263 do do if not(Hg<=0)then if Hg==0X1 then SK=(205*SK+qg)%256;Hg=0X00000;else return Lg*16777216+Pg*0X10000+pg*256+hg;end;else W=W+0x00004;Hg=0x2;end;end;end;end;local Z=(setfenv);RF=0X4;local oK,P,UK,s,B,I,RK,jK,LK,dK=nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);while RF<=10 do if not(RF<=0X4)then if RF<=7 then if RF<=0x05 then function jK(gM,RM,zM)local PM,xM,HM=gM[0X1],gM[0x4],gM[7];local cM,DM=gM[5],(gM[9]);local hM,WM=gM[0x2],gM[0x6];local NM=H({},{__mode="v"});local jM=(nil);local sM=gM[0x008];do jM=function(...)local es,Is=1,({});local js=((M and M()or _ENV));local ws,ms=0,{[2]=Is,[1]=gM};local Ls=((js==Y and RM or js));local Ms,ns=UK(...);Ms=Ms-1;do for zJ=0x0,Ms do do if not(cM>zJ)then break;else(Is)[zJ]=ns[zJ+0X1];end;end;end;end;if not xM then ns=nil;elseif HM then Is[cM]={n=Ms>=cM and Ms-cM+1 or 0,D(ns,cM+0X01,Ms+0X01)};end;if Ls==js then else do if Z then Z(jM,Ls);else _ENV=Ls;end;end;end;local cs,Es,Gs,Fs=U(function()while true do local Wd=(hM[es]);local Rd=Wd[0x1];es=es+1;if not(Rd<46)then do if not(Rd<0X45)then if not(Rd<80)then if Rd>=0X56 then if Rd<0X0059 then if Rd>=0x57 then do if Rd~=0X0058 then(Is)[Wd[3]]=Is[Wd[0X2]]>=Is[Wd[5]];else do GK[Wd[0x2]]=Is[Wd[0X3]];end;end;end;else Is[Wd[3]][Is[Wd[0X2]]]=Is[Wd[0X5]];end;else do if not(Rd<0X0005A)then if Rd==91 then Is[Wd[0x3]]=Is[Wd[0X02]]==Is[Wd[5]];else if Wd[0X005]~=0x000053 then repeat local kL,fL=NM,Is;if not(#kL>0)then else local Uy=({});for iw,aw in V,kL do for q2,B2 in V,aw do do if not(B2[1]==fL and B2[0X00002]>=0)then else local UB=(B2[2]);if not(not Uy[UB])then else(Uy)[UB]={fL[UB]};end;do(B2)[0X00001]=Uy[UB];end;(B2)[2]=1;end;end;end;end;end;until true;local fy=Wd[3];do return false,fy,fy;end;else do es=es-0X1;end;do hM[es]={[2]=(Wd[2]-79),[0X03]=(Wd[3]-79),[0X0001]=30};end;end;end;else do Is[Wd[3]]=ms[Wd[2]];end;end;end;end;else do if Rd>=0X053 then if not(Rd>=0X0054)then if Wd[0X0005]==0Xc2 then es=es-0x001;(hM)[es]={[3]=(Wd[0X03]-0x0087),[0X1]=79,[0x0002]=(Wd[2]-135)};else do Is[Wd[3]]=ns[cM+0X1];end;end;else if Rd==0X55 then(Is)[Wd[0X3]]=Is[Wd[0X2]]*Is[Wd[0X05]];else(Is)[Wd[0X3]]={D({},1,Wd[2])};end;end;else if not(Rd<81)then if Rd==0X052 then do if not(Is[Wd[0x0002]]<=Is[Wd[0X5]])then else es=Wd[0x3];end;end;else if Is[Wd[0X2]]==Wd[0x6]then else es=Wd[0X3];end;end;else es=Wd[0X002];end;end;end;end;else if Rd<74 then do if Rd>=71 then do if Rd<72 then do if Is[Wd[2]]<Is[Wd[5]]then do es=Wd[3];end;end;end;else if Rd~=0X49 then do(Is)[Wd[0X3]]=not Is[Wd[2]];end;else local Y8=Wd[0x03];local n8=(I(function(...)t();for kn,Wn in...do(t)(true,kn,Wn);end;end));(n8)(Is[Y8],Is[Y8+0X1],Is[Y8+0X02]);ws=Y8;(Is)[Y8]=n8;do es=Wd[2];end;end;end;end;else if Rd~=0X46 then(Is)[Wd[3]]=Is[Wd[2]]/Is[Wd[0X5]];else local Al=(Wd[0x3]);local ol,xl=Is[Al],(Wd[5]-0X01)*0X00032;for eD=0X001,ws-Al do ol[xl+eD]=Is[Al+eD];end;end;end;end;else if not(Rd>=0X0004d)then do if Rd<0x00004B then if Is[Wd[2]]~=Wd[6]then else es=Wd[3];end;else if Rd~=0x4C then local mz=Wd[3];local Lz,fz=Is[mz]();if Lz then Is[mz+1]=fz;es=Wd[0X00002];end;else local Za=(Wd[3]);local ta=Is[Za];local Ma=((Wd[5]-1)*50);for hC=1,Wd[2]do(ta)[Ma+hC]=Is[Za+hC];end;end;end;end;else if Rd<78 then local Rl=Wd[3];ws=Rl+Wd[0X002]-1;(Is)[Rl]=Is[Rl](D(Is,Rl+0x1,ws));ws=Rl;else if Rd~=79 then Is[Wd[3]]=Is[Wd[2]]>Is[Wd[5]];else(Is)[Wd[0X3]]=#Is[Wd[0X0002]];end;end;end;end;end;else if not(Rd<57)then do if not(Rd<63)then if Rd<66 then if Rd<64 then do if Wd[5]~=45 then repeat local F4,b4,J4=NM,Is,(Wd[3]);do if#F4>0X0000 then local pp=({});for yC,SC in V,F4 do do for tw,qw in V,SC do if not(qw[0x001]==b4 and qw[2]>=J4)then else local pm=(qw[0X2]);if not pp[pm]then do pp[pm]={b4[pm]};end;end;(qw)[0X1]=pp[pm];(qw)[0x00002]=0X1;end;end;end;end;end;end;until true;else es=es-1;do hM[es]={[0X0001]=0X3d,[2]=(Wd[0X2]-0X68),[0x3]=(Wd[0x3]-0X0068)};end;end;end;else if Rd==0x41 then ws=Wd[3];Is[ws]=Is[ws]();else local QN=Wd[3];local NN=I(function(...)t();do for Oj,aj,kj,fj,Aj,Cj,cj,Uj,jj,oj in...do(t)(true,{Oj,aj,kj,fj,Aj,Cj,cj,Uj,jj,oj});end;end;end);NN(Is[QN],Is[QN+0X1],Is[QN+0x2]);ws=QN;Is[QN]=NN;do es=Wd[2];end;end;end;else do if Rd>=0X43 then if Rd~=0X044 then local rY=(Is[Wd[2]]);local nY=Wd[3];(Is)[nY+1]=rY;do(Is)[nY]=rY[Wd[6]];end;else if not(Is[Wd[2]]<Is[Wd[5]])then es=Wd[0x3];end;end;else if Is[Wd[2]]~=Is[Wd[5]]then else es=Wd[3];end;end;end;end;else if Rd<0X3c then if not(Rd<58)then if Rd~=59 then do(Is)[Wd[0x3]]=Ls[Wd[7]];end;else local Af=Wd[0X3];local Bf,Pf=Wd[0x002],(Wd[0x5]);if Bf==0X000 then else ws=Af+Bf-0X0001;end;local df,Ff=nil,nil;do if Bf~=0X1 then df,Ff=UK(Is[Af](D(Is,Af+0X1,ws)));else df,Ff=UK(Is[Af]());end;end;if Pf==1 then do ws=Af-0x1;end;else if Pf~=0 then df=Af+Pf-2;ws=df+0X001;else do df=df+Af-1;end;ws=df;end;local sx=0;for Qh=Af,df do sx=sx+0X001;do(Is)[Qh]=Ff[sx];end;end;end;end;else(Is)[Wd[3]]=true;end;else do if Rd<61 then local H2=Wd[3];Is[H2](Is[H2+0X001],Is[H2+2]);ws=H2-1;else if Rd==0x3E then Is[Wd[0X3]]=Is[Wd[2]]<Is[Wd[5]];else Is[Wd[0X0003]]=nil;end;end;end;end;end;end;else do if Rd>=0x33 then if not(Rd<54)then if not(Rd<55)then if Rd~=0X38 then Ls[Wd[7]]=Is[Wd[0X3]];else if not(not(Is[Wd[2]]<=Is[Wd[5]]))then else es=Wd[0X3];end;end;else local TV=(zM[Wd[0X2]]);(TV[1])[TV[0X2]]=Is[Wd[0X3]];end;else if not(Rd<52)then do if Rd~=0x35 then local KE=Wd[0x03];local sE,FE=Is[KE]();if sE then es=Wd[0X00002];Is[KE+0X0003]=FE;end;else local Y4=Wd[2];local M4=(Is[Y4]);for IY=Y4+0X1,Wd[5]do M4=M4..Is[IY];end;(Is)[Wd[3]]=M4;end;end;else local yj,fj=Wd[3],Ms-cM;if fj<0 then do fj=-0X001;end;end;do for LS=yj,yj+fj do(Is)[LS]=ns[cM+(LS-yj)+1];end;end;do ws=yj+fj;end;end;end;else do if not(Rd<0X30)then if not(Rd<49)then if Rd~=50 then(Is)[Wd[0X3]]=Is[Wd[2]]-Is[Wd[0X5]];else local WP=(Wd[0X3]);local oP,nP=Is[WP]();do if oP then for FA=0X1,Wd[0x0005]do do(Is)[WP+FA]=nP[FA];end;end;es=Wd[0X0002];end;end;end;else for Hq=Wd[3],Wd[0X2]do Is[Hq]=nil;end;end;else if Rd==0X00002F then do if Is[Wd[3]]then do es=Wd[2];end;end;end;else(Is[Wd[0x3]])[Is[Wd[0x2]]]=Wd[0X6];end;end;end;end;end;end;end;end;else do if not(Rd<23)then if not(Rd<34)then if not(Rd>=0X28)then if Rd<0x25 then if not(Rd>=0X023)then local Ol=(Wd[3]);(Is)[Ol]=Is[Ol](D(Is,Ol+0X1,ws));ws=Ol;else if Rd~=0x24 then local sE=(Wd[0X3]);local fE,UE,pE=Is[sE]();if fE then Is[sE+0X1]=UE;Is[sE+0x0002]=pE;es=Wd[2];end;else(Is)[Wd[3]]=A(Is[Wd[2]]);end;end;else if Rd>=0X00026 then if Rd~=0X27 then do ms[Wd[0X00002]]=Is[Wd[0X0003]];end;else Is[Wd[0X3]]=b(Is[Wd[0X2]],Is[Wd[0X5]]);end;else local IJ=Wd[3];local sJ,zJ,VJ=Is[IJ],Is[IJ+1],(Is[IJ+2]);Is[IJ]=I(function()for nm=sJ,zJ,VJ do(t)(true,nm);end;end);es=Wd[2];end;end;else if Rd<0x2B then if not(Rd>=41)then repeat local rn,Wn=NM,Is;if not(#rn>0X00000)then else local iT={};do for C9,u9 in V,rn do for LA,AA in V,u9 do if not(AA[1]==Wn and AA[2]>=0)then else local MG=AA[2];do if not(not iT[MG])then else iT[MG]={Wn[MG]};end;end;do AA[1]=iT[MG];end;do(AA)[0X2]=0x1;end;end;end;end;end;end;until true;return true,Wd[3],1;else do if Rd==42 then(Is)[Wd[0x3]]=Wd[0X00007];else local qi=(Wd[0X3]);(Is)[qi]=Is[qi](Is[qi+0x1],Is[qi+0X2]);ws=qi;end;end;end;else do if Rd<44 then ws=Wd[3];Is[ws]();ws=ws-1;else if Rd==0x2d then local PB=(WM[Wd[2]]);local lB=PB[3];local kB=(nil);local XB=(#lB);do if not(XB>0)then else kB={};for bz=1,XB do local az=(lB[bz]);if az[1]~=0 then kB[bz-1]=zM[az[2]];else do(kB)[bz-1]={Is,az[2]};end;end;end;(g)(NM,kB);end;end;Is[Wd[3]]=jK(PB,Ls,kB);else(Is)[Wd[0X3]]=false;end;end;end;end;end;else do if not(Rd>=28)then if Rd>=0X19 then if not(Rd>=26)then local wl=Wd[3];Is[wl](D(Is,wl+1,ws));ws=wl-1;else if Rd==0X1B then do Is[Wd[3]]=Is[Wd[2]];end;else local NN=(Wd[0X0003]);for Zp=NN,NN+(Wd[2]-1)do(Is)[Zp]=ns[cM+(Zp-NN)+1];end;end;end;else do if Rd==0X18 then local Rs=zM[Wd[0x2]];(Is)[Wd[0X3]]=Rs[1][Rs[0X02]];else do(Is)[Wd[0X3]]=Is[Wd[0x02]]%Wd[6];end;end;end;end;else if Rd>=0x001F then if Rd>=0X20 then if Rd~=0X00021 then(Is[Wd[3]])[Wd[0X7]]=Is[Wd[5]];else if Is[Wd[2]]==Is[Wd[5]]then else es=Wd[3];end;end;else do(Is)[Wd[3]]=Is[Wd[2]]~=Is[Wd[0X5]];end;end;else if not(Rd>=0x01D)then do(Is)[Wd[0X00003]]=Wd[7];end;else if Rd~=0x0001E then if not Is[Wd[0X3]]then do es=Wd[0X2];end;end;else repeat local IC,YC=NM,Is;if not(#IC>0X0)then else local xp=({});for hk,Ek in V,IC do do for i_,x_ in V,Ek do do if not(x_[1]==YC and x_[2]>=0x0)then else local iM=(x_[2]);if not xp[iM]then xp[iM]={YC[iM]};end;do(x_)[1]=xp[iM];end;x_[2]=0X1;end;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;else if Rd>=11 then if not(Rd<17)then if Rd>=0x14 then if Rd>=0X15 then do if Rd~=0X16 then local UR=(Wd[0X00003]);local dR=I(function(...)t();do for f0 in...do(t)(true,f0);end;end;end);dR(Is[UR],Is[UR+0x1],Is[UR+0x2]);ws=UR;(Is)[UR]=dR;es=Wd[2];else local Cf=Wd[0X2];Is[Wd[3]]=Is[Cf]..Is[Cf+1];end;end;else do(Is)[Wd[0X00003]]=O(Is[Wd[0X02]],Is[Wd[0x5]]);end;end;else if not(Rd<0x12)then if Rd==19 then local Cq=(Wd[0X3]);Is[Cq](Is[Cq+0X01]);do ws=Cq-1;end;else repeat local Bf,Xf=NM,(Is);if not(#Bf>0)then else local gz=({});do for QA,EA in V,Bf do do for TU,pU in V,EA do if pU[1]==Xf and pU[0X0002]>=0X0 then local Sr=pU[0X0002];do if not(not gz[Sr])then else(gz)[Sr]={Xf[Sr]};end;end;(pU)[1]=gz[Sr];pU[0x2]=1;end;end;end;end;end;end;until true;return true,Wd[0X3],0;end;else(Is)[Wd[3]]=Is[Wd[2]]~=Wd[0x6];end;end;else do if Rd<0XE then if Rd>=12 then do if Rd~=0Xd then if Wd[5]==0X021 then es=es-1;hM[es]={[0X2]=(Wd[0x2]-48),[0X03]=(Wd[0x003]-0x30),[1]=11};elseif Wd[5]==0X00F then do es=es-1;end;(hM)[es]={[0X2]=(Wd[2]-0X00D0),[1]=51,[0X003]=(Wd[3]-0Xd0)};elseif Wd[5]~=0X00008A then repeat local DL,cL=NM,(Is);if not(#DL>0X0000)then else local DG={};for CR,dR in V,DL do for Oe,ee in V,dR do if ee[1]==cL and ee[2]>=0 then local oI=(ee[2]);if not DG[oI]then(DG)[oI]={cL[oI]};end;ee[1]=DG[oI];ee[0X002]=1;end;end;end;end;until true;local W8=(Wd[3]);return false,W8,W8+Wd[2]-2;else do es=es-1;end;hM[es]={[0x2]=(Wd[0x02]-0x1d),[1]=0X1e,[3]=(Wd[3]-0x1d)};end;else(Is)[Wd[3]]=Is[Wd[2]]<=Is[Wd[0x5]];end;end;else repeat local is,Bs=NM,Is;if not(#is>0X00000)then else local qX={};for vR,NR in V,is do for lF,fF in V,NR do do if not(fF[1]==Bs and fF[0X2]>=0)then else local Nd=(fF[2]);if not qX[Nd]then do qX[Nd]={Bs[Nd]};end;end;do fF[1]=qX[Nd];end;do(fF)[0X0002]=0X01;end;end;end;end;end;end;until true;do return false,Wd[3],ws;end;end;else do if not(Rd<0X0F)then do if Rd==16 then Is[Wd[3]]=Is[Wd[0X0002]]^Is[Wd[5]];else do Is[Wd[3]]={};end;end;end;else local X5=Wd[3];ws=X5+Wd[0X00002]-0x1;Is[X5](D(Is,X5+1,ws));do ws=X5-1;end;end;end;end;end;end;else if Rd>=5 then if Rd<8 then if not(Rd<0X06)then if Rd~=0X007 then if not(Is[Wd[0X002]]<=Wd[0X00006])then es=Wd[0X03];end;else(Is)[Wd[0x0003]]=Is[Wd[0X00002]]%Is[Wd[5]];end;else do Is[Wd[3]]=Is[Wd[0X2]][Wd[0X006]];end;end;else if not(Rd>=9)then Is[Wd[0X3]]=GK[Wd[0X00002]];else do if Rd==0X0A then local BJ=(Wd[0X3]);do Is[BJ]=Is[BJ](Is[BJ+0X00001]);end;ws=BJ;else do Is[Wd[3]]=u(Is[Wd[2]],Is[Wd[0X05]]);end;end;end;end;end;else if not(Rd<0X2)then if not(Rd>=3)then local vI=Wd[2];local NI=Wd[0X3];ws=NI+vI-0X1;repeat local ge,te=NM,Is;if#ge>0X0 then local xj={};for Rp,xp in V,ge do for II,FI in V,xp do do if not(FI[0X1]==te and FI[0X2]>=0)then else local Zq=(FI[2]);do if not(not xj[Zq])then else xj[Zq]={te[Zq]};end;end;do FI[1]=xj[Zq];end;(FI)[2]=1;end;end;end;end;end;until true;do return true,NI,vI;end;else if Rd~=4 then(Is)[Wd[0x03]]=Is[Wd[2]]+Is[Wd[0X5]];else if Wd[5]~=172 then Is[Wd[0x00003]]=-Is[Wd[0X2]];else es=es-1;do(hM)[es]={[1]=0X0033,[0x2]=(Wd[2]-0X00b6),[3]=(Wd[0X03]-0XB6)};end;end;end;end;else if Rd==1 then Is[Wd[0X0003]]=Is[Wd[2]][Is[Wd[0X5]]];else do(Is[Wd[0x3]])[Wd[7]]=Wd[0x6];end;end;end;end;end;end;end;end;end;end);if cs then if Es then if Fs==1 then do return Is[Gs]();end;else do return Is[Gs](D(Is,Gs+1,ws));end;end;elseif Gs then do return D(Is,Gs,Fs);end;end;else if e(Es)=="string"then if not(w(Es,'a\116\116em\112\116 \116\111 yiel\100 \097c\114o\115s metam\101tho\100\047C%\045\099a\108\108\032b\111unda\114\121'))then else return coroutine.yield();end;do if not(w(Es,"\094\046-:\037\100+:\032"))then(G)(Es,0X000);else G("Luraph Script:"..(PM[es-0X01]or"(internal)")..": "..R(Es),0);end;end;else G(Es,0X0);end;end;end;end;if not(Z)then else(Z)(jM,RM);end;return jM;end;RF=0X2;else if RF==6 then do s=function()local sI=p();if sI>i then return sI-y;end;return sI;end;end;RF=0X3;else RF=0X0005;end;end;else if not(RF<=8)then if RF==9 then I=pK.wrap;RF=1;else do UK=function(...)do return E("\035",...),{...};end;end;end;RF=6;end;else dK=LK();RF=0X0b;end;end;else if RF<=1 then if RF==0X0 then do P={3,0X5,2};end;do RF=0XA;end;else do RK=1;end;do RF=0X7;end;end;else do if RF<=2 then function LK()local qT,mT,sT=0X2,nil,(nil);while qT<=2 do if not(qT<=0X00)then do if qT==0X1 then sT={{},{},TK,TK,TK,{},TK,nil,TK};do qT=3;end;else qT=0;end;end;else mT={};do qT=0x1;end;end;end;local KT,pT,oT=nil,nil,nil;for xV=0,0X0005 do do if not(xV<=2)then if xV<=0X3 then sT[9]=p();else if xV~=0X4 then oT=J()-51774;else pT={};end;end;else if xV<=0X0 then KT=0x01;else do if xV~=0X01 then(sT)[15]=r();else do sT[0X0010]=J();end;end;end;end;end;end;end;local UT,yT=sT[0x6],(nil);do for g5=0X00000,0X4 do do if g5<=0x1 then if g5==0 then for PG=0,oT-0X1 do UT[PG]=LK();end;else sT[0X3]=pT;end;else do if not(g5<=2)then do if g5~=0X03 then do for dY=1,yT do local rY=(0x0);local mY,gY,IY=nil,nil,nil;do repeat if rY<=0X000 then mY=J();rY=1;else if rY~=0X1 then IY=J();break;else gY=J();rY=2;end;end;until(false);end;for k9=mY,gY do do(sT[rK])[k9]=IY;end;end;end;end;else yT=J();end;end;else for ZP=1,p()do do(pT)[ZP]={r(),p()};end;end;end;end;end;end;end;end;local QT=sT[0x2];local HT=J()-0X0002a21;for mC=1,HT do(QT)[mC]={[7]=r(),[4]=r(),[hK]=r(),[0X5]=s(),[3]=s(),[1]=p(),[2]=s()};end;sT[0XA]=r();local WT=(J()-0Xafa3);local CT=({});local vT=r();qT=0;local tT=nil;do while qT<0x2 do if qT~=0 then for i2=0x01,WT do local f2,N2,H2,O2=1,nil,nil,(nil);while f2<8 do if f2<=3 then if f2<=0X1 then do if f2==0x0 then(CT)[KT]=O2;f2=4;else N2=r();f2=0X5;end;end;else if f2~=2 then if tT then(eK)[RK]=O2;RK=RK+0X1;end;f2=8;else O2={H2,{}};f2=0x0000;end;end;else if not(f2<=0X00005)then if f2==6 then(mT)[i2-0X0001]=KT;do f2=0x00007;end;else if N2==0x000023 then H2=j(oK(vT),J());elseif N2==0X44 then do H2=sK;end;elseif N2==0xA5 then do H2=h();end;elseif N2==vF then H2=j(oK(vT),h()+J());elseif N2==SF then H2=h();elseif N2==EF then H2=j(oK(vT),6);elseif N2==oF then H2=j(oK(vT),J());elseif N2==57 then H2=true;elseif N2==UF then H2=j(oK(vT),PK);elseif N2~=125 then else H2=X();end;f2=0X02;end;else if f2==0X4 then KT=KT+rK;f2=0X3;else H2=TK;f2=0X6;end;end;end;end;end;qT=2;else tT=r()~=0x0;qT=0X01;end;end;end;do qT=0X3;end;local iT=nil;while(true)do if not(qT<=2)then if qT<=4 then if qT~=0X00003 then return sT;else do iT=r();end;qT=1;end;else if qT==5 then do sT[7]=c(iT,nK,0x1)~=0;end;qT=0x0006;else do sT[0x008]=p();end;qT=0X2;end;end;else if qT<=0X0 then sT[5]=p();qT=4;else if qT~=0X1 then do for qo=1,HT do local jo=(sT[0x2][qo]);for e9,J9 in eF(P)do local K9,g9,f9=1,nil,nil;repeat do if K9<=0X0 then f9=jo[g9];do K9=2;end;else if K9==0X1 then g9=f[J9];K9=0;else if f9==XK then local gf=mT[jo[J9]];local If=(CT[gf]);do if not(If)then else local ej=nil;for Qg=0X00000,0X2 do if Qg<=0x0 then do jo[g9]=If[0x1];end;else do if Qg==0X1 then ej=If[0X002];else ej[#ej+0X1]={jo,g9};end;end;end;end;end;end;elseif f9==14 then jo[J9]=qo+jo[J9]+1;end;do K9=0X3;end;end;end;end;until K9>2;end;end;end;qT=0;else do(sT)[0x4]=c(iT,1,1)~=0X0;end;qT=5;end;end;end;end;end;RF=0X00008;else if RF==0X3 then B=fK;RF=0X0009;else oK=function(pQ)local EQ=0x02;local tQ,uQ=nil,(nil);repeat if not(EQ<=1)then do if EQ<=2 then do tQ=J();end;EQ=0;else if EQ~=0x3 then W=W+tQ;EQ=3;else return uQ;end;end;end;else do if EQ~=0X0 then for yo=0X1,tQ,7997 do local to,qo=0,(nil);while to<0X002 do if to==0 then qo=yo+0X0001f3d-0X1;to=1;else if qo>tQ then do qo=tQ;end;end;to=0X2;end;end;local Ro={L(F,W+yo-0X01,W+qo-1)};to=0X0;while to~=0X2 do if to==0 then for M7=1,#Ro do for Dg=0,0x1 do do if Dg~=0 then do vK=(pQ*vK+0x00057)%256;end;else(Ro)[M7]=b(Ro[M7],vK);end;end;end;end;do to=1;end;else uQ=uQ..d(D(Ro));do to=2;end;end;end;end;EQ=0X0004;else do uQ="";end;do EQ=1;end;end;end;end;until(false);end;RF=0X0;end;end;end;end;end;end;GK[0X2]=eK;RF=0X1;repeat if RF==0X0 then return jK(dK,Y,TK)(...);else eK=TK;RF=0X00;end;until(false);end)(0xe1,string.rep,string.sub,112,0X00A,select,0X8,14,next,"b\120\111r",getfenv,table.unpack,0,7,"\098\110\111t",0x2,16,_ENV,0x00003,string,0X00016,0X1,string.match,setmetatable,coroutine.yield,rawset,'b\097n\100',rawget,string.gsub,"",0Xc,tonumber,11,0Xa6,pcall,211,error,nil,assert,tostring,type,ipairs,table.insert,0X006,0X9,coroutine,false,{14315,103768000,0X00007cEb0DDa,125754391,603097143,1887372224,0XF6cA6624,0X0005A73BB48,2712479564},...);