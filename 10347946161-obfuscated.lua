-- This file was generated using Luraph Obfuscator v13.5.6

return(function(va,Ja,Oa,ra,ma,za,aa,Ca,ca,Ya,na,Da,Xa,Ka,Fa,sa,wa,ga,oa,ja,Ra,qa,Ta,ta,ba,ua,ka,xa,ea,fa,Pa,Ga,la,ha,Na,Aa,da,Ea,pa,Za,Va,H,...)local I=Va;local HF=(0X1);local i,W,S=select,pcall,Ka;local M,K,r,Q=nil,nil,nil,(nil);repeat if HF<=1 then do if HF==0X000 then K=string.rep;HF=3;else M=ra;HF=0;end;end;else if HF==2 then Q=Da.char;break;else r=Da.match;HF=0X00002;end;end;until false;local O=setmetatable;do HF=5;end;local L,P,Wa,Ua,o,V,G,x,k=nil,nil,nil,nil,nil,nil,nil,nil,nil;while true do do if not(HF<=4)then if not(HF<=0X7)then if HF<=8 then HF=0x9;else if HF==9 then do k=4294967296;end;break;else do P=Oa;end;HF=4;end;end;else if not(HF<=0X5)then if HF~=0X6 then G=fa;HF=0X0000;else Ua=1;do HF=0X1;end;end;else L=string.sub;HF=0xa;end;end;else if HF<=0X00001 then if HF==0 then x=(G and G()or _ENV);HF=0x8;else o=pa.yield;HF=0X00002;end;else if HF<=0x2 then V=na;HF=0X03;else do if HF~=3 then do Wa=function(...)return i("#",...),{...};end;end;HF=0X0006;else do HF=7;end;end;end;end;end;end;end;end;local y=(type);do HF=0x00002;end;local m,e,u,d,N,t,v=nil,nil,nil,nil,nil,nil,(nil);repeat if HF<=3 then if not(HF<=1)then do if HF==2 then m=Pa;do HF=0X04;end;else u=0X00001;HF=0x5;end;end;else if HF~=0X0 then t={[0]=1};HF=7;else do N=2147483648;end;HF=0X0001;end;end;else do if not(HF<=5)then if HF==0X6 then d=function()local wL=(M(m,u,u));u=u+0X1;return wL;end;HF=0;else v=0X02^52;HF=0X8;end;else if HF~=4 then m=V(L(m,0X05),Aa,function(y0)if M(y0,2)~=0X48 then local jx=(nil);local Xx=(0X0);repeat if Xx~=0x00 then if not(e)then do return jx;end;else local cY,EY=1,nil;while 0.04522343070808932 do do if not(cY<=0X0000)then if cY==1 then do EY=K(jx,e);end;cY=0X2;else e=oa;do cY=0X00;end;end;else return EY;end;end;end;end;do Xx=2;end;else jx=Q(S(y0,0x0010));Xx=0X1;end;until Xx>1;else for yx=0x0,0X0001 do do if yx~=0 then return'';else do e=S(L(y0,1,0X1));end;end;end;end;end;end);do HF=0X6;end;else HF=0X0003;end;end;end;end;until HF>7;local R=N-0X1;local j,D=k-1,table.insert;HF=0X1;local F,J,C=nil,nil,(nil);repeat if HF<=1 then if HF==0 then do J=function()local ij=0X0;local lj,Rj,jj,zj=nil,nil,nil,(nil);while 0.4770571654622967 do if ij<=0X00 then lj,Rj,jj,zj=M(m,u,u+za);ij=2;else do if ij~=0X0001 then u=u+4;do ij=0X1;end;else return zj*0x1000000+jj*65536+Rj*0X100+lj;end;end;end;end;end;end;HF=3;else F={7,6,0x1};HF=0X00000;end;else if HF==0X00002 then C=function(qM,bM,iM)local LM,eM=0X1,nil;while true do if LM<=0X000 then eM=eM-eM%1;LM=0X2;else if LM==1 then eM=(qM/t[bM])%t[iM];LM=0x0;else return eM;end;end;end;end;HF=4;else do local cM=(nil);local gM=0;while gM<=0x1 do if gM==0x000 then cM=2;gM=0X001;else do for sF=0X1,31 do t[sF]=cM;cM=cM*0X2;end;end;do gM=2;end;end;end;end;HF=2;end;end;until HF>=0x4;HF=0;local Z,q,s,p,a=nil,nil,nil,nil,(nil);repeat if not(HF<=0X1)then if HF<=0X2 then s=(va or bit32);HF=0X1;else do if HF~=0X3 then a=function()local y0,B0,n0=0x00001,nil,(nil);repeat do if y0~=0X0 then B0=J();do y0=0X0;end;else n0=J();break;end;end;until(false);if not(B0==0X0 and n0==0x0)then else do return 0;end;end;local v0=(-1)^C(n0,31,0X001);local N0=C(n0,0x014,11);local O0=1;local H0=C(n0,0,0X14)*k+B0;y0=1;do while true do if y0==0 then return v0*(2^(N0-0X3FF))*(H0/v+O0);else if N0==0 then if H0==0 then return v0*0;else local gg=(0);do repeat if gg==0 then do N0=0X001;end;gg=1;else O0=0x0;gg=0X00002;end;until gg==2;end;end;else if N0~=0x7Ff then else if H0==0X00 then return v0*(0/0);else return v0*(0X1/0);end;end;end;y0=0x00000;end;end;end;end;break;else q={[0x0]={[0x0]=0,0x1,2,3,0X4,5,0X6,7,8,0X9,10,0X00B,0X0000C,13,wa,0XF},{[0X0]=0x1,0,0X3,0X02,5,4,0X00007,0X0006,0X9,8,11,0XA,13,0xc,0XF,14},{[0X000]=2,3,0X00000,1,6,7,0X0004,5,10,11,0X00008,9,0Xe,15,0x000c,0XD},{[0X0]=0X3,0X002,1,0,0X00007,6,0X5,Ga,0X0000B,0XA,9,8,15,0xe,13,0xc},{[0]=4,0X5,6,xa,0,1,0x2,0X3,12,13,0xE,0X00f,0X8,0x9,0X0A,0X00b},{[0]=5,0x4,0X7,ua,1,0,za,0X2,0X000D,0Xc,0X000f,14,0x09,0X8,11,10},{[0X0]=6,7,0x04,5,0X2,0X3,0x00000,1,14,ma,12,13,10,ea,0X08,0X9},{[0X00000]=0X7,ua,5,4,3,2,1,0,15,0XE,0XD,12,11,0X000a,9,8},{[0X0]=0x008,9,10,0X000B,0X00C,0XD,wa,ma,0X0000,0X1,2,0X3,0X4,5,ua,0x7},{[0X000]=0X9,8,11,10,0X000D,12,15,14,0x00001,0,0x00003,0x2,5,4,0X00007,0X006},{[da]=10,11,8,0X9,14,0X0000f,Ja,0Xd,2,3,da,1,6,0X7,4,0X05},{[da]=11,0XA,0X9,0X8,0X00F,14,0Xd,12,0X3,Na,0X1,0X0,0x007,0X06,5,0X004},{[0x0]=0Xc,ka,14,ma,0X0008,0X9,0XA,0XB,Ga,0X5,6,0X7,0,0x1,2,za},{[0]=13,12,15,0X000E,9,0X08,0X0b,0X0a,0x5,4,7,6,0X001,0,3,0X00002},{[0X000]=0Xe,0X0f,12,ka,10,11,8,9,6,7,4,0X5,2,3,da,0X1},{[0X0]=ma,0XE,0XD,12,0X00b,10,0X9,8,7,0X6,5,0X4,0X3,0X2,0X1,0}};HF=0X0002;end;end;end;else if HF==0x00000 then Z=function()local s3,R3=J(),J();do if R3>=N then R3=R3-k;end;end;return R3*k+s3;end;do HF=0X3;end;else p=ja;HF=4;end;end;until(false);local X=s and s[Ra]or function(Z4,N4)local f4,o4=0,(nil);do while f4~=0X3 do if not(f4<=0X0)then if f4~=1 then do N4=N4%k;end;do f4=3;end;else o4=1;do f4=2;end;end;else Z4=Z4%k;f4=0X1;end;end;end;local Q4=(nil);do for yF=0X0,0X2 do do if not(yF<=0)then if yF~=0x0001 then do return Q4+Z4*o4+N4*o4;end;else while Z4>0 and N4>0 do local dM,SM=nil,nil;for Om=0X000,0X5 do if Om<=0X2 then do if Om<=0x0 then dM=Z4%ta;else if Om==1 then SM=N4%0X0010;else Q4=Q4+q[dM][SM]*o4;end;end;end;elseif Om<=3 then do Z4=(Z4-dM)/0X10;end;else if Om~=4 then o4=o4*0X10;else N4=(N4-SM)/0X10;end;end;end;end;end;else Q4=0X0;end;end;end;end;end;local E=(s and s[Ca]or function(vx,ax)do vx=vx%k;end;local jx=(1);do repeat if jx~=0X00 then ax=ax%k;jx=0;else return((vx+ax)-X(vx,ax))/0X2;end;until(false);end;end);local g=(s and s[Za]or function(cA,kA)local oA=(1);do repeat if not(oA<=0x0)then if oA~=1 then return j-E(j-cA,j-kA);else cA=cA%k;oA=0;end;else do kA=kA%k;end;do oA=2;end;end;until false;end;end);local h=(s and s[sa]);local b,z=s and s[aa]or function(vK)return j-(vK%k);end,(unpack or qa);local w,T=setfenv,(s and s[Xa]);do h=h or function(vr,Wr)if Wr>=32 then return 0X00;end;if Wr<0 then do return T(vr,-Wr);end;end;do return(vr*t[Wr])%k;end;end;end;HF=0x001;local l=nil;do while true do if HF==0 then do l={[0X1]=5,[9]=0X3,[6]=2,[2]=0X0,[da]=3,[9]=2,[9]=0X5,[9]=4,[7]=3,[0X002]=6,[4]=1};end;break;else T=T or function(Lz,jz)local Fz=nil;for dT=0x0,0X3 do do if not(dT<=0X00001)then if dT==0x2 then do Fz=(Lz%k/t[jz]);end;else return Fz-Fz%1;end;else if dT~=0X0 then if jz<0X00 then return h(Lz,-jz);end;else do if jz>=0x0020 then return 0x0;end;end;end;end;end;end;end;HF=0x0000;end;end;end;local c,Y=nil,nil;for jx=0X0,0X0001 do do if jx==0 then do c=function()local XZ,NZ=0,(0);while-494145196 do local ex=(M(m,u,u));u=u+0X00001;XZ=g(XZ,h(E(ex,0X7f),NZ));if E(ex,0X80)==0X000 then return XZ;end;NZ=NZ+7;end;end;end;else Y=function()local Tp=(2);local tp=nil;while true do if Tp<=0 then do if tp>R then return tp-k;end;end;do Tp=0X1;end;else do if Tp~=0X1 then tp=c();do Tp=0x000;end;else return tp;end;end;end;end;end;end;end;end;local Ha=(d());local B=Ea;local Ba=(d());HF=4;local ia,Sa,ya,A,U,Ia=nil,nil,nil,nil,nil,(nil);while HF<=0x6 do do if not(HF<=0X2)then if not(HF<=0X4)then if HF==5 then do Sa=function(LH)local BH=(J());local xH=("");for eK=1,BH,0x1f3d do local zK=nil;local VK,JK=eK+7997-1,0X2;while JK<0X3 do if JK<=0 then for KJ=0X00001,#zK do do for g2=0,0X1 do if g2==0x00000 then(zK)[KJ]=X(zK[KJ],Ha);else do Ha=(LH*Ha+89)%256;end;end;end;end;end;JK=0X03;else if JK==0X1 then zK={M(m,u+eK-0x1,u+VK-0x1)};do JK=0;end;else if not(VK>BH)then else do VK=BH;end;end;JK=0X0001;end;end;end;do xH=xH..Q(z(zK));end;end;u=u+BH;return xH;end;end;HF=0x00000;else Ia={};HF=1;end;else if HF~=0X3 then do ia=function(L6)local j6=({M(m,u,u+0X3)});local k6=X(j6[0x0001],Ba);local d6=0X0;local r6,W6,o6=nil,nil,nil;repeat if not(d6<=0X00)then if d6~=0X00001 then o6=X(j6[Ga],Ba);do break;end;else W6=X(j6[0X3],Ba);d6=0x002;end;else r6=X(j6[0X2],Ba);d6=0X00001;end;until(false);do d6=0X1;end;while(true)do if d6<=0 then return o6*16777216+W6*ga+r6*0x100+k6;else if d6~=1 then u=u+4;d6=0;else Ba=(0X75*Ba+L6)%0X100;d6=2;end;end;end;end;end;HF=5;else do U=ba;end;HF=6;end;end;else if HF<=0 then ya={};HF=2;else if HF==0X1 then HF=7;else A=coroutine.wrap;HF=0X3;end;end;end;end;end;HF=1;local f,La,Ma=nil,nil,nil;while HF<=2 do if HF<=0X0 then function La(z2,I2,w2)local T2,A2,j2,D2=I2[0X5],I2[0X00009],I2[0X1],(I2[4]);local t2=I2[6];local X2=(I2[2]);local K2=(I2[7]);local S2=O({},{__mode='\118'});local G2,e2=I2[8],(nil);e2=function(...)local Kp,cp=0X01,({});local Ip=({[0X1]=I2,[2]=cp});local zp=((G and G()or _ENV));local Hp,vp=Wa(...);Hp=Hp-1;local xp=(0x0);local Zp=((zp==x and w2 or zp));for eE=0X0,Hp do if T2>eE then(cp)[eE]=vp[eE+0x1];else break;end;end;if not D2 then vp=nil;else if not(K2)then else(cp)[T2]={n=Hp>=T2 and Hp-T2+1 or 0X0,z(vp,T2+1,Hp+1)};end;end;if Zp~=zp then do if not(w)then do _ENV=Zp;end;else w(e2,Zp);end;end;end;local ip,np,ep,Cp=W(function()while 0.6095706794449953 do local X9=X2[Kp];local m9=X9[0X4];Kp=Kp+1;if m9<0x2d then if not(m9>=22)then if m9>=0Xb then if not(m9>=0X10)then if m9<13 then if m9~=12 then cp[X9[0x7]]=cp[X9[6]]%X9[0x5];else repeat local cG,sG=S2,cp;if not(#cG>0X0)then else local gr=({});for I9,Z9 in P,cG do do for yD,uD in P,Z9 do if not(uD[0X1]==sG and uD[0X2]>=0x000)then else local eZ=uD[2];if not(not gr[eZ])then else do gr[eZ]={sG[eZ]};end;end;(uD)[0x001]=gr[eZ];uD[2]=1;end;end;end;end;end;until true;return true,X9[0X7],0X01;end;else if m9>=14 then do if m9==0X0000f then local pI=X9[7];local II,gI=cp[pI]();do if II then for sZ=1,X9[1]do cp[pI+sZ]=gI[sZ];end;Kp=X9[0X0006];end;end;else cp[X9[0x7]]=cp[X9[0X0006]]>=cp[X9[1]];end;end;else local gh=X9[0X007];local yh,Kh=cp[gh],((X9[0X1]-1)*0X000032);for sS=0X0001,X9[6]do do yh[Kh+sS]=cp[gh+sS];end;end;end;end;else if not(m9>=19)then do if not(m9>=17)then(cp)[X9[7]]=cp[X9[6]][cp[X9[0X001]]];else if m9~=18 then xp=X9[0x00007];cp[xp]=cp[xp]();else(cp)[X9[7]]=cp[X9[0X0006]]~=X9[5];end;end;end;else if m9>=0X014 then do if m9~=0X15 then if cp[X9[0X6]]~=X9[5]then do Kp=X9[0X7];end;end;else do if cp[X9[6]]<cp[X9[0X1]]then Kp=X9[7];end;end;end;end;else if cp[X9[6]]~=X9[5]then else Kp=X9[7];end;end;end;end;else if not(m9<0X05)then if not(m9<0X8)then if m9<9 then local uV=(X9[0X7]);xp=uV+X9[0x006]-1;cp[uV](z(cp,uV+0X1,xp));xp=uV-0X01;else if m9~=10 then do if X9[0X001]==154 then Kp=Kp-0X1;X2[Kp]={[0x7]=(X9[7]-0x0042),[0x6]=(X9[6]-66),[0X4]=66};else repeat local w4,j4=S2,cp;do if not(#w4>0)then else local qp=({});do for bs,Fs in P,w4 do do for VQ,tQ in P,Fs do if not(tQ[1]==j4 and tQ[0x2]>=0)then else local Fo=tQ[2];if not qp[Fo]then qp[Fo]={j4[Fo]};end;(tQ)[0X1]=qp[Fo];(tQ)[2]=0X1;end;end;end;end;end;end;end;until true;return;end;end;else do cp[X9[0x7]]={};end;end;end;else if not(m9>=6)then(cp[X9[7]])[X9[2]]=cp[X9[1]];else if m9~=0X7 then local od=X9[7];(cp)[od]=cp[od](cp[od+1]);xp=od;else local n5,a5=X9[7],(X9[0x6]);do xp=n5+a5-0X001;end;repeat local Bc,Qc=S2,(cp);if#Bc>0 then local uf={};for Ou,Bu in P,Bc do for n6,x6 in P,Bu do if not(x6[0X0001]==Qc and x6[2]>=0)then else local QY=(x6[2]);if not uf[QY]then uf[QY]={Qc[QY]};end;x6[0X001]=uf[QY];x6[2]=1;end;end;end;end;until true;do return true,n5,a5;end;end;end;end;else do if m9<0x2 then if m9~=1 then Ia[X9[6]]=cp[X9[7]];else cp[X9[0x7]]=cp[X9[0X0006]]==cp[X9[0X1]];end;else if not(m9>=3)then cp[X9[7]]=cp[X9[0X6]]+cp[X9[0X1]];else do if m9==0X4 then local x7=(X9[7]);local M7=cp[X9[6]];cp[x7+1]=M7;(cp)[x7]=M7[X9[0X5]];else local Ls=(z2[X9[6]]);(Ls[1])[Ls[0x0002]]=cp[X9[0X0007]];end;end;end;end;end;end;end;else if not(m9>=0x00021)then if not(m9>=27)then do if not(m9>=24)then if m9==0X17 then local xX=X9[0x07];cp[xX](cp[xX+0X00001]);xp=xX-1;else cp[X9[7]]=X(cp[X9[6]],cp[X9[1]]);end;else if not(m9>=0X19)then repeat local fX,WX=S2,cp;do if#fX>0x0 then local Tk={};for gE,YE in P,fX do for Xw,Sw in P,YE do do if Sw[0X001]==WX and Sw[2]>=0 then local cG=Sw[2];if not Tk[cG]then(Tk)[cG]={WX[cG]};end;do(Sw)[0X1]=Tk[cG];end;(Sw)[2]=0X0001;end;end;end;end;end;end;until true;local y1=X9[0X00007];return false,y1,y1+X9[0X06]-0X0002;else do if m9==0X1a then(cp)[X9[0X7]]=cp[X9[0X0006]][X9[5]];else do cp[X9[0X7]]=cp[X9[0x6]]>cp[X9[1]];end;end;end;end;end;end;else do if not(m9>=30)then if not(m9<0X0001C)then if m9~=29 then cp[X9[7]]=nil;else(cp)[X9[0X7]]=cp[X9[6]]/cp[X9[1]];end;else local dK=X9[6];local gK=cp[dK];for Jo=dK+0X01,X9[1]do gK=gK..cp[Jo];end;cp[X9[0X7]]=gK;end;else do if m9>=31 then if m9~=0X020 then do cp[X9[7]]=T(cp[X9[6]],cp[X9[0X001]]);end;else local j5=X9[0x00007];local y5=A(function(...)o();for Cn in...do o(true,Cn);end;end);y5(cp[j5],cp[j5+0X1],cp[j5+2]);xp=j5;cp[j5]=y5;do Kp=X9[6];end;end;else local ex=(X9[0X00001]-0X1)*0X00032;local gx=X9[0X7];local Lx=cp[gx];for iu=0x1,xp-gx do(Lx)[ex+iu]=cp[gx+iu];end;end;end;end;end;end;else do if not(m9<0x000027)then if m9>=42 then if m9>=43 then if m9==0X02c then local t_=z2[X9[6]];do cp[X9[7]]=t_[0x001][t_[0X02]];end;else do(cp)[X9[0X7]]=cp[X9[0X6]]<=cp[X9[0X00001]];end;end;else(cp)[X9[7]]={z({},1,X9[0x00006])};end;else do if not(m9<0x028)then do if m9==0x29 then cp[X9[0X0007]][X9[0X2]]=X9[5];else(cp)[X9[7]]=Ip[X9[0X0006]];end;end;else local Iw=(X9[0X7]);local mw=(A(function(...)(o)();do for vu,Au,cu,Tu,Ku,Gu,qu,nu,Cu,ou in...do(o)(true,{vu,Au,cu,Tu,Ku,Gu,qu,nu,Cu,ou});end;end;end));mw(cp[Iw],cp[Iw+1],cp[Iw+2]);xp=Iw;cp[Iw]=mw;Kp=X9[6];end;end;end;else if not(m9<36)then do if not(m9>=37)then local qI=(X9[0X7]);local rI,wI=cp[qI]();if not(rI)then else Kp=X9[0X6];do(cp)[qI+3]=wI;end;end;else do if m9~=0X26 then if X9[0X01]~=0XFD then do if not cp[X9[7]]then do Kp=X9[6];end;end;end;else do Kp=Kp-1;end;X2[Kp]={[0X0004]=24,[6]=(X9[0X00006]-0X2),[7]=(X9[7]-0X2)};end;else local Gf=(X9[6]);do(cp)[X9[0X07]]=cp[Gf]..cp[Gf+1];end;end;end;end;end;else do if not(m9>=0X22)then local Oy=(X9[7]);cp[Oy](z(cp,Oy+1,xp));xp=Oy-1;else do if m9==35 then do cp[X9[0X07]]=-cp[X9[0X006]];end;else local Vf=X9[0X0007];do cp[Vf]=cp[Vf](z(cp,Vf+1,xp));end;xp=Vf;end;end;end;end;end;end;end;end;end;else if not(m9>=0x43)then if not(m9>=56)then if not(m9>=0X0032)then if not(m9<0x0002F)then if m9>=48 then if m9==0X31 then do(cp)[X9[0x00007]]=not cp[X9[0X6]];end;else if X9[0X1]==8 then Kp=Kp-0x1;(X2)[Kp]={[0x7]=(X9[0x007]-0X17),[0X0004]=87,[6]=(X9[6]-0X17)};elseif X9[1]==128 then Kp=Kp-0X0001;(X2)[Kp]={[0X4]=0X1C,[0X0007]=(X9[0X7]-0xfD),[6]=(X9[0X00006]-0XFd)};elseif X9[1]==0x00A1 then do Kp=Kp-0X01;end;do(X2)[Kp]={[0X4]=28,[0X0006]=(X9[6]-0x009a),[0X7]=(X9[0X7]-154)};end;else local Q8=X9[0x7];for Qr=Q8,Q8+(X9[6]-0X01)do cp[Qr]=vp[T2+(Qr-Q8)+0X1];end;end;end;else(cp)[X9[0X7]]=E(cp[X9[6]],cp[X9[1]]);end;else if m9~=46 then local r6=X9[0X7];xp=r6+X9[0X6]-1;do cp[r6]=cp[r6](z(cp,r6+1,xp));end;xp=r6;else cp[X9[0X00007]]=cp[X9[6]]^cp[X9[0X0001]];end;end;else if not(m9<0x035)then if m9>=0X36 then do if m9==0x37 then(Zp)[X9[0X0002]]=cp[X9[7]];else if X9[0X01]==36 then Kp=Kp-1;do X2[Kp]={[6]=(X9[0x6]-0X40),[4]=78,[7]=(X9[7]-64)};end;else for Zo=X9[7],X9[6]do(cp)[Zo]=nil;end;end;end;end;else(cp)[X9[7]]=cp[X9[6]]*cp[X9[1]];end;else if not(m9>=0X33)then cp[X9[0X7]]=Zp[X9[2]];else do if m9~=52 then local E4=X9[0X7];local H4=cp[E4+0X2];local A4=(cp[E4+1]);local X4=cp[E4];do(cp)[E4]=A(function()for yD=X4,A4,H4 do(o)(true,yD);end;end);end;Kp=X9[0X6];else do if not(not(cp[X9[0x00006]]<=cp[X9[0X1]]))then else do Kp=X9[0X7];end;end;end;end;end;end;end;end;else if m9<0X00003D then if not(m9<58)then if m9<0X3b then Kp=X9[6];else if m9==0X3c then(cp)[X9[0X7]]=cp[X9[6]]-cp[X9[0X1]];else if not(cp[X9[0X06]]<cp[X9[1]])then Kp=X9[7];end;end;end;else if m9==0x39 then do(cp)[X9[0X7]]=Ia[X9[0X6]];end;else local L6=(X9[7]);local d6=A(function(...)(o)();for Ff,ff in...do o(true,Ff,ff);end;end);d6(cp[L6],cp[L6+0X00001],cp[L6+0X2]);xp=L6;cp[L6]=d6;do Kp=X9[0x06];end;end;end;else if not(m9<64)then do if m9>=0X41 then if m9~=66 then(cp)[X9[0X7]]=g(cp[X9[6]],cp[X9[1]]);else local fK,TK=Hp-T2,X9[0X7];if fK<0X0 then fK=-1;end;for fj=TK,TK+fK do cp[fj]=vp[T2+(fj-TK)+0X1];end;xp=TK+fK;end;else if X9[1]==52 then Kp=Kp-1;(X2)[Kp]={[0X6]=(X9[6]-29),[0X00007]=(X9[7]-0x1d),[0x004]=66};elseif X9[0x1]~=0X0d3 then if not(cp[X9[0X7]])then else Kp=X9[0X6];end;else Kp=Kp-0X1;X2[Kp]={[0X00004]=0X1c,[7]=(X9[7]-132),[6]=(X9[0x6]-132)};end;end;end;else if m9<0x3E then if cp[X9[6]]==cp[X9[1]]then Kp=X9[0X7];end;else if m9==0X3F then repeat local Sx,Hx=S2,cp;if not(#Sx>0)then else local au=({});for mD,BD in P,Sx do for Wo,uo in P,BD do if not(uo[0X001]==Hx and uo[2]>=0X00)then else local Qc=uo[0X2];if not(not au[Qc])then else(au)[Qc]={Hx[Qc]};end;(uo)[0X0001]=au[Qc];(uo)[2]=0X1;end;end;end;end;until true;return true,X9[0X7],0x0;else local u3=X9[7];cp[u3](cp[u3+0X00001],cp[u3+2]);do xp=u3-0x1;end;end;end;end;end;end;else if not(m9>=0X4e)then if m9>=72 then if m9>=0X00004b then if m9>=76 then if m9==0X0004d then xp=X9[0X07];(cp[xp])();xp=xp-1;else cp[X9[7]]=cp[X9[6]]<cp[X9[1]];end;else local nI,sI=X9[0x7],X9[0X6];local AI=(X9[0X01]);if sI~=0 then xp=nI+sI-1;end;local jI,II=nil,nil;if sI==0x1 then jI,II=Wa(cp[nI]());else jI,II=Wa(cp[nI](z(cp,nI+0X1,xp)));end;if AI==1 then do xp=nI-0X0001;end;else if AI~=0X00000 then jI=nI+AI-0X2;xp=jI+1;else jI=jI+nI-0X1;xp=jI;end;local Ed=(0x0);do for xX=nI,jI do Ed=Ed+0X0001;(cp)[xX]=II[Ed];end;end;end;end;else do if m9<73 then local MK=(X9[7]);do(cp)[MK]=cp[MK](cp[MK+0X0001],cp[MK+0X00002]);end;xp=MK;else if m9==0X0004A then cp[X9[7]][cp[X9[6]]]=cp[X9[0X1]];else local Sw=cp[X9[6]]/cp[X9[0x1]];(cp)[X9[0x7]]=Sw-Sw%1;end;end;end;end;else if not(m9<0X45)then if m9>=0X46 then if m9~=0X47 then if cp[X9[6]]~=cp[X9[0X0001]]then Kp=X9[0X7];end;else do if X9[0X0001]~=37 then(cp)[X9[7]]=#cp[X9[0X6]];else Kp=Kp-1;X2[Kp]={[4]=0X00042,[0x7]=(X9[0X7]-0x5),[6]=(X9[6]-5)};end;end;end;else if not(cp[X9[0X6]]<=X9[0X5])then Kp=X9[7];end;end;else if m9==0X0044 then(cp)[X9[7]]=cp[X9[0x0006]]%cp[X9[0X001]];else(cp)[X9[7]]=true;end;end;end;else do if not(m9<84)then do if not(m9>=87)then if m9<85 then local vc=(t2[X9[0X6]]);local kc=(vc[3]);local zc=#kc;local gc=(nil);if zc>0 then gc={};for Ly=1,zc do local Qy=(kc[Ly]);do if Qy[0x00001]~=0 then gc[Ly-0X1]=z2[Qy[2]];else do(gc)[Ly-0x01]={cp,Qy[2]};end;end;end;end;(D)(S2,gc);end;cp[X9[0X7]]=La(gc,vc,Zp);else do if m9==86 then do cp[X9[7]]=false;end;else Ip[X9[6]]=cp[X9[0x7]];end;end;end;else if m9>=0X000058 then if m9~=89 then local hh=X9[0X7];local Fh,ch,Dh=cp[hh]();if Fh then cp[hh+0X0001]=ch;(cp)[hh+2]=Dh;Kp=X9[0X6];end;else local vA=(X9[7]);local aA,RA=cp[vA]();if aA then cp[vA+1]=RA;Kp=X9[0X0006];end;end;else if X9[0X01]==28 then Kp=Kp-1;X2[Kp]={[7]=(X9[0X007]-197),[0x4]=71,[0X006]=(X9[6]-0Xc5)};else repeat local cI,PI=S2,(cp);do if#cI>0 then local MD=({});for pH,rH in P,cI do for un,Hn in P,rH do do if Hn[1]==PI and Hn[2]>=0x000 then local d5=Hn[0X00002];if not(not MD[d5])then else(MD)[d5]={PI[d5]};end;(Hn)[0X1]=MD[d5];do(Hn)[0X2]=1;end;end;end;end;end;end;end;until true;return false,X9[0X7],xp;end;end;end;end;else do if m9<0x0051 then do if not(m9<79)then if m9~=0X50 then cp[X9[0x7]][cp[X9[0x6]]]=X9[5];else if cp[X9[6]]<=cp[X9[1]]then do Kp=X9[7];end;end;end;else if X9[1]~=6 then cp[X9[7]]=cp[X9[0x00006]];else do Kp=Kp-1;end;X2[Kp]={[0X004]=0X47,[6]=(X9[6]-0X00dF),[7]=(X9[0X7]-0X0000DF)};end;end;end;else do if m9>=82 then if m9~=0X53 then cp[X9[0X7]]=cp[X9[0X6]]~=cp[X9[0X1]];else do cp[X9[0x7]]=X9[2];end;end;else if X9[0x1]~=163 then repeat local r9,R9,B9=S2,cp,(X9[0x7]);if#r9>0 then local FB={};for aF,OF in P,r9 do for Ae,Je in P,OF do do if Je[0X01]==R9 and Je[0X00002]>=B9 then local Y4=Je[2];if not(not FB[Y4])then else FB[Y4]={R9[Y4]};end;(Je)[1]=FB[Y4];(Je)[2]=0x1;end;end;end;end;end;until true;else Kp=Kp-1;(X2)[Kp]={[0x6]=(X9[6]-99),[0X7]=(X9[0X7]-0X63),[0X04]=0X0042};end;end;end;end;end;end;end;end;end;end;end;end);if ip then if np then if Cp==1 then do return cp[ep]();end;else do return cp[ep](z(cp,ep+0X1,xp));end;end;else if not(ep)then else return z(cp,ep,Cp);end;end;else do if y(np)=="strin\103"then if r(np,"\097\116te\109p\116\032\116o\032y\105el\100 ac\114\111ss m\101tametho\100/C%-\099\097l\108\032bou\110\100ary")then return coroutine.yield();end;if r(np,"^.-:%d+: ")then I("L\117r\097\112h\032\083\099r\105pt:"..(j2[Kp-1]or"(internal)")..':\032'..U(np),0X00);else I(np,0);end;else(I)(np,0X000);end;end;end;end;do if not(w)then else w(e2,w2);end;end;do return e2;end;end;do HF=2;end;else if HF~=0x01 then function Ma()local Ay=0;local my,Fy,ly,Uy=nil,nil,nil,(nil);do while Ay~=0x5 do if not(Ay<=0X1)then if not(Ay<=2)then if Ay==3 then do Uy={};end;do Ay=0X005;end;else Fy=0X1;Ay=0X2;end;else ly={{},{},nil,oa,nil,{},nil,oa,nil};Ay=3;end;else if Ay~=0 then do my={};end;do Ay=0x04;end;else do Ay=0X00001;end;end;end;end;end;local Ry=(ly[6]);local Yy=(J()-94034);local by=({});Ay=9;local ry,xy,gy,wy=nil,nil,nil,nil;do while Ay<0Xa do if Ay<=4 then if not(Ay<=1)then if not(Ay<=0X2)then if Ay==0X3 then do ly[8]=c();end;Ay=10;else wy=d();Ay=6;end;else ly[7]=C(wy,2,1)~=0;Ay=0X00007;end;else if Ay==0X00000 then gy=J()-85573;Ay=1;else do for Os=0,gy-0X0001 do Ry[Os]=Ma();end;end;do Ay=4;end;end;end;else if not(Ay<=0X6)then if Ay<=7 then ly[13]=J();Ay=0x3;else if Ay==8 then do xy=d()~=0X0;end;Ay=0X05;else ry=d();Ay=0x8;end;end;elseif Ay~=5 then(ly)[4]=C(wy,0X00001,1)~=0;do Ay=0X2;end;else for gp=Ta,Yy do local tp=(1);local Ip,Tp=nil,nil;repeat do if tp==0 then Tp=d();do tp=2;end;else Ip=nil;tp=0;end;end;until tp==2;my[gp-1]=Fy;do if Tp==0X9b then do Ip=L(Sa(ry),J());end;elseif Tp==0X0EC then Ip=L(Sa(ry),J());elseif Tp==67 then do Ip=Z();end;elseif Tp==159 then Ip=Fa;elseif Tp==0X74 then Ip=L(Sa(ry),3);elseif Tp==138 then do Ip=a()+J();end;elseif Tp==41 then Ip=a();elseif Tp==la then Ip=Z();elseif Tp==0X072 then Ip=ca;elseif Tp==32 then Ip=L(Sa(ry),a()+J());end;end;local fp=({Ip,{}});do tp=0;end;while(true)do if tp~=0X0 then Fy=Fy+0X01;break;else(by)[Fy]=fp;tp=0X01;end;end;do if not(xy)then else(ya)[Ua]=fp;Ua=Ua+0X0001;end;end;end;Ay=0X00;end;end;end;end;local Oy=J();for K3=Ta,Oy do local R3,g3=nil,nil;local G3=0;while G3~=0X2 do if G3==0X0 then do R3=J();end;G3=1;else g3=J();G3=0X002;end;end;local A3=(J());for UC=R3,g3 do ly[0X1][UC]=A3;end;end;(ly)[0X00009]=c();ly[0X5]=c();local ty=ly[2];do Ay=0X1;end;local Py=nil;while""do if Ay~=0X0000 then Py=J()-0X6B59;Ay=0;else do for vE=1,Py do ty[vE]={[6]=Y(),[0X5]=d(),[4]=c(),[0x1]=Y(),[2]=d(),[0X3]=d(),[xa]=Y()};end;end;break;end;end;for Dr=0X0001,Py do local rr=ly[2][Dr];do for GC,qC in Ya(F)do local mC=l[qC];local LC=(rr[mC]);if LC==11 then local aG,LG,iG=0X0001,nil,nil;while true do if aG<=0X0 then do iG=by[LG];end;do aG=2;end;else if aG==1 then do LG=my[rr[qC]];end;aG=0x00000;else do if iG then local NA=(nil);for vk=0,0X1 do if vk~=0x0000 then NA=iG[2];else do(rr)[mC]=iG[Ta];end;end;end;NA[#NA+1]={rr,mC};end;end;break;end;end;end;else if LC~=14 then else rr[qC]=Dr+rr[qC]+1;end;end;end;end;end;for oL=0,2 do do if not(oL<=0X000)then if oL==1 then(ly)[11]=d();else(ly)[0X3]=Uy;end;else ly[0x0000b]=J();end;end;end;do Ay=0X1;end;repeat if Ay==0 then return ly;else for r8=1,c()do do Uy[r8]={d(),c()};end;end;do Ay=0X0;end;end;until false;end;HF=3;else do f=ha;end;HF=0X0000;end;end;end;local Qa=(Ma());(Ia)[2]=ya;HF=0;repeat do if HF~=0 then return La(oa,Qa,x)(...);else ya=nil;do HF=1;end;end;end;until(false);end)(bit,0Xc,next,string.byte,0xf,3,"\098not",'b\097\110\100',false,ipairs,string.gsub,string,'\114\115hift',tonumber,true,'ls\104\105ft',0Xe,0X010000,nil,rawget,"\098\120\111\114",table.unpack,0X1,16,tostring,0X6,13,0X7,0xB,getfenvrawset,0X002,"\046\046",0X0000,assert,coroutine,'b\111\114',error,{0x0007F9f,2899464602,0X0F143F727,0X00c4190B70,0X003214B6E6,0x6a3A4832,3215095075,1010491292,0X00F2f8d7AF},...);