-- This file was generated using Luraph Obfuscator v13.5.6

return(function(MN,bN,jN,hN,tN,yN,dN,rN,HN,zN,WN,wN,xN,FN,UN,kN,QN,lN,LN,XN,qN,TN,mN,ZN,AN,JN,NN,EN,CN,BN,sN,PN,KN,eN,DN,iN,GN,cN,ON,SN,pN,Y,...)local YM=1;local g,u=nil,(nil);while true do if YM~=0X0 then g=xN;do YM=0;end;else u=SN;break;end;end;local R,a,f,x,j=type,jN,nil,nil,(nil);for Kj=0,0x2 do if Kj<=0 then do f=WN.sub;end;else if Kj~=0X1 then j=string.gsub;else x=WN.char;end;end;end;YM=0X4;local b,W,C,J,S,l,A=nil,nil,nil,nil,nil,nil,nil;do while YM<=6 do if not(YM<=2)then if not(YM<=4)then if YM==5 then W=string.match;YM=0X02;else S=zN;YM=3;end;else if YM==3 then l=coroutine.yield;YM=0X00;else b=bN;do YM=5;end;end;end;elseif not(YM<=0X0000)then if YM==0X1 then J=4294967296;YM=0X6;else C=cN;YM=0X001;end;else A=0X1;YM=0x7;end;end;end;local D=(CN);local q=nil;local I=(assert);for F9=0,1 do if F9==0 then else q={[0]={[0]=0x0000,BN,0X2,0X00003,0x4,5,0X6,7,8,0X0009,10,11,12,13,0Xe,15},{[0X00]=1,0,0X003,2,0X5,0x4,0X7,0X06,0X09,0X8,11,10,13,12,0X000f,14},{[0]=0X2,DN,0X0,1,6,0X7,0x00004,0X00005,10,lN,8,0x9,14,0XF,tN,13},{[kN]=3,2,BN,kN,0x7,6,0X5,4,11,10,9,0x8,0X00f,14,0Xd,12},{[0X0]=0X4,5,6,7,0X000,1,0X0002,3,tN,0XD,14,15,0x8,9,10,lN},{[kN]=0x0005,4,7,sN,BN,0,DN,2,13,0X0000c,15,0XE,NN,8,11,0X000a},{[0X0]=0x6,0X0007,0x04,0X5,2,3,0X0,0X1,0xe,15,12,13,10,0Xb,0X008,9},{[0X0]=AN,sN,5,4,3,0x2,0x1,0,15,0Xe,hN,12,11,10,0x9,0X00008},{[0]=0X0008,NN,10,0X0000b,12,0x000D,14,15,0x0,0X00001,0X002,3,4,5,0X0006,7},{[0X0]=0x00009,8,11,10,0Xd,0x0000c,0XF,0X0000E,BN,0X00,3,2,5,4,0X7,6},{[0X0]=0X0000a,11,0X00008,0X9,0XE,0XF,12,13,0X2,3,0X0,1,0X6,7,4,5},{[0X0]=11,0X000a,9,8,15,14,hN,tN,0x3,2,0X1,0,0X7,0x6,5,EN},{[0]=0x0c,hN,14,0xf,iN,0X9,MN,11,4,5,6,0X7,0,0X1,2,3},{[0]=13,0Xc,15,eN,0x9,8,11,10,5,0X4,0X7,0X0006,0X001,0,0X0003,0X2},{[0]=0xE,15,12,0Xd,0X000A,11,8,9,0X00006,0x7,EN,0x0005,2,0x3,0X0,0x1},{[0]=15,0Xe,0X00d,0xC,11,10,9,8,7,0X6,5,0X4,0X3,0X002,1,0X0}};end;end;local m=({[0X0]=1});local B=(next);YM=1;local s,V,N,p,k,h,E=nil,nil,nil,nil,nil,nil,nil;while YM<0X8 do if YM<=3 then if YM<=0x1 then if YM==0X00000 then do YM=3;end;else do s=JN;end;YM=0X7;end;else do if YM==0x2 then N=(s and s()or LN);YM=0;else p=2^0X34;do YM=0X4;end;end;end;end;else if YM<=5 then if YM==4 then k=XN;YM=0X6;else do YM=8;end;end;else do if YM==0X6 then helse do V=pN;end;YM=2;end;end;end;end;end;local i,e,c,M=nil,nil,nil,nil;do for UY=0X0000,0X4 do do if UY<=1 then if UY~=0X0 then i=function()local AT=(0);local iT=nil;do while'\066'do do if not(AT<=0x0)then if AT==1 then do return iT;end;else A=A+0X1;AT=1;end;else iT=V(h,A,A);do AT=0X002;end;end;end;end;end;end;else do h=j(f(h,0x05),"\046.",function(us)if V(us,0x2)~=mN then local B6=x(u(us,0X10));if E then local YK=(1);local JK=(nil);repeat if not(YK<=0)then if YK==1 then do JK=S(B6,E);end;YK=2;else E=dN;do YK=0X00000;end;end;else do return JK;end;end;until(false);else return B6;end;else local lE=(0);while true do if lE~=0 then return"";else do E=u(f(us,1,0X1));end;do lE=1;end;end;end;end;end);end;end;else if not(UY<=2)then do if UY~=0X3 then M=function()local Ag,Pg,rg,hg,Ug=2,nil,nil,nil,(nil);repeat if not(Ag<=0X0)then do if Ag~=0X1 then Pg,rg,hg,Ug=V(h,A,A+0x3);Ag=0X1;else do A=A+0X4;end;Ag=0X0;end;end;else return Ug*16777216+hg*yN+rg*0x0100+Pg;end;until(false);end;else do c=ON;end;end;end;else do e=2147483648;end;end;end;end;end;end;local X=(e-0X1);local L=J-1;local O=function()local ic=0X0002;local Hc,Pc=nil,(nil);do repeat if ic<=0X0 then return Pc*J+Hc;else do if ic~=1 then Hc,Pc=M(),M();ic=1;else do if Pc>=e then Pc=Pc-J;end;end;ic=0X00;end;end;end;until false;end;end;local o,d=nil,(nil);local z=(qN);do for UQ=0,0X2 do if UQ<=0X0 then do local Ut,xt=1,(nil);do while Ut~=2 do do if Ut==0X00000 then for hf=1,31 do local Tf=0X0;while Tf<=0X01 do if Tf==0x0 then m[hf]=xt;Tf=1;else xt=xt*0X02;do Tf=2;end;end;end;end;do Ut=2;end;else xt=UN;Ut=0;end;end;end;end;end;else if UQ~=1 then do d=function(gF,hF,xF)local CF=(gF/m[hF])%m[xF];CF=CF-CF%0X1;return CF;end;end;else do o=wN;end;end;end;end;end;YM=0X0;local y,U=nil,nil;repeat if YM==0 then y=function()local T0,M0,p0,N0,n0,f0=nil,nil,nil,nil,nil,(nil);local v0=4;do repeat if not(v0<=2)then if v0<=0x4 then do if v0~=0X003 then T0=M();v0=2;else f0=d(M0,0,0X000014)*J+T0;v0=0X7;end;end;else if v0~=5 then do n0=1;end;v0=0X3;else p0=(-1)^d(M0,31,1);do v0=0X1;end;end;end;elseif v0<=0X0 then if T0==0 and M0==0 then do return 0x0;end;end;v0=0X05;else if v0==1 then do N0=d(M0,0x14,11);end;v0=6;else M0=M();v0=0X0000;end;end;until v0==0x7;end;for Tm=0X0,1 do do if Tm==0x000 then if N0==0 then do if f0~=0 then N0=1;do n0=kN;end;else return p0*0;end;end;else if N0==2047 then if f0~=kN then return p0*(1/0x00);else return p0*(0x0/kN);end;end;end;else return p0*(0X002^(N0-0x03FF))*(f0/p+n0);end;end;end;end;do YM=0X1;end;else U=(GN or bit32);do YM=2;end;end;until YM==0x00002;local w=U and U.bxor or function(S1,V1)local l1,u1=nil,nil;for yl=0X0,0X005 do if not(yl<=2)then do if not(yl<=0X03)then if yl==0X4 then do while S1>0X0 and V1>0 do local fP,iP,kP=S1%16,V1%16,0X03;repeat do if kP<=0x001 then if kP==0X0 then S1=(S1-fP)/0X0010;kP=2;else l1=l1*0X10;break;end;else if kP~=2 then u1=u1+q[fP][iP]*l1;kP=0;else do V1=(V1-iP)/0X000010;end;kP=0X1;end;end;end;until false;end;end;else return u1+S1*l1+V1*l1;end;else u1=kN;end;end;else do if yl<=0X0 then S1=S1%J;else do if yl==0x1 then do V1=V1%J;end;else l1=0X1;end;end;end;end;end;end;end;local G=U and U.band or function(gC,TC)local OC=1;while 1047830210 do if OC<=0X0 then return((gC+TC)-w(gC,TC))/0X002;else do if OC~=0x1 then TC=TC%J;OC=0x00000;else gC=gC%J;OC=0X2;end;end;end;end;end;local Q=(U and U.bor or function(NG,sG)NG=NG%J;sG=sG%J;do return L-G(L-NG,L-sG);end;end);local T=(U and U[ZN]);local K=(U and U.lshift);local Z=(U and U[QN]or function(Ku)return L-(Ku%J);end);local F=({BN,AN,0X6});YM=0x1;do repeat if YM==0 then T=T or function(z6,X6)local I6=(0x1);local k6=nil;while I6<3 do if I6<=0 then if not(X6<0X0)then else return K(z6,-X6);end;do I6=0X2;end;else if I6~=1 then k6=(z6%J/m[X6]);I6=3;else do if X6>=32 then do return 0;end;end;end;I6=0;end;end;end;return k6-k6%BN;end;do YM=0x002;end;else K=K or function(eR,tR)local pR=1;do while pR~=2 do if pR==0 then if not(tR<0)then else return T(eR,-tR);end;pR=0x2;else if tR>=32 then return 0;end;pR=0;end;end;end;return(eR*m[tR])%J;end;do YM=0X0;end;end;until YM>0X01;end;local t=(unpack or table.unpack);YM=0;local P,r=nil,(nil);while YM~=2 do if YM~=0x0 then r=function()local id,Hd=0x00,(0);repeat local VT=(V(h,A,A));A=A+0X1;Hd=Q(Hd,K(G(VT,127),id));if G(VT,0X80)==0 then return Hd;end;do id=id+0X0007;end;until false;end;do YM=2;end;else P={[8]=0X3,[8]=0,[0x1]=0X5,[0X7]=0X3,[0x9]=1,[0X9]=0x9,[NN]=3,[6]=UN,[0X2]=0x9};do YM=0X00001;end;end;end;local YN=i();YM=0;local H,v=nil,(nil);repeat do if YM==0 then H=function()local Dw=nil;for Wr=0,2 do do if not(Wr<=0X00)then if Wr==1 then if not(Dw>X)then else do return Dw-J;end;end;else return Dw;end;else Dw=r();end;end;end;end;do YM=0X001;end;else v=KN;YM=2;end;end;until YM==2;local IN=i();YM=0X03;local gN,aN,uN,nN,vN=nil,nil,nil,nil,(nil);while YM<=4 do do if not(YM<=1)then if YM<=2 then do uN=function(...)return g("#",...),{...};end;end;YM=4;else do if YM~=3 then nN=function(To)local ho,Ao,mo=0,nil,(nil);repeat do if ho~=0 then mo='';do ho=0x0002;end;else Ao=M();do ho=0X1;end;end;end;until ho==2;do ho=2;end;while 0.16740515788029753 do if not(ho<=0)then if ho~=0x1 then do for vT=1,Ao,7997 do local uT=(nil);for Q3=0,1 do do if Q3==0X0 then uT=vT+TN-0x1;else if uT>Ao then do uT=Ao;end;end;end;end;end;local QT=({V(h,A+vT-1,A+uT-1)});local mT=(0X1);while mT~=2 do do if mT~=0 then do for ee=BN,#QT do do QT[ee]=w(QT[ee],YN);end;do YN=(To*YN+27)%0X100;end;end;end;mT=0X0;else mo=mo..x(t(QT));mT=0X0002;end;end;end;end;end;ho=0x000;else return mo;end;else do A=A+Ao;end;ho=0X1;end;end;end;YM=0;else do gN=function(Fg)local jg,Mg,eg,bg=0X0000,nil,nil,nil;while jg<=0X02 do do if jg<=0 then do Mg={V(h,A,A+3)};end;jg=0X2;else if jg==1 then bg=w(Mg[2],IN);do jg=0X003;end;else eg=w(Mg[1],IN);jg=0X1;end;end;end;end;local Cg=(w(Mg[3],IN));local Lg=w(Mg[0X4],IN);do jg=1;end;repeat if not(jg<=0)then do if jg~=1 then A=A+4;do jg=0X0000;end;else IN=(0x0000b5*IN+Fg)%256;do jg=2;end;end;end;else do return Lg*16777216+Cg*65536+bg*256+eg;end;end;until false;end;end;YM=0X1;end;end;end;else do if YM~=0x0 then aN={};YM=2;else vN={};YM=5;end;end;end;end;end;local RN=0X1;YM=1;local oN,fN,VN=nil,nil,(nil);do repeat if YM<=2 then if not(YM<=0)then if YM==0X00001 then YM=2;else function oN(Xq,Qq,yq)local Jq=Qq[0X00008];local fq,Yq,bq,Pq=Qq[0X06],Qq[0X005],Qq[4],(Qq[9]);local xq,aq=Qq[0X2],Qq[0X003];local Dq=(Qq[0X7]);local zq=c({},{__mode='\118'});local Vq=(nil);do Vq=function(...)local pq,qq=0x1,{};local Rq=(s and s()or _ENV);local Sq,rq={[0X1]=Qq,[2]=qq},((Rq==N and Xq or Rq));local tq,Iq=uN(...);tq=tq-0X1;do for u2=0,tq do if aq>u2 then(qq)[u2]=Iq[u2+0X0001];else do break;end;end;end;end;if not Yq then do Iq=nil;end;else if not(bq)then else do qq[aq]={n=tq>=aq and tq-aq+1 or 0,t(Iq,aq+0x1,tq+1)};end;end;end;local Nq=0x000;if rq==Rq then else if k then k(Vq,rq);else _ENV=rq;end;end;local Lq,nq,Wq,gq=v(function()do while-717726307 do local Hb=Jq[pq];local Xb=Hb[4];do pq=pq+1;end;if Xb>=0X2f then do if Xb>=70 then do if Xb<0X52 then if Xb<76 then if not(Xb>=73)then if Xb>=0x47 then do if Xb~=0X00048 then do qq[Hb[7]]=Q(qq[Hb[6]],qq[Hb[1]]);end;else local hD=Hb[0X00007];local fD=(D(function(...)l();for s8,P8,q8,K8,i8,T8,U8,v8,G8,g8 in...do l(true,{s8,P8,q8,K8,i8,T8,U8,v8,G8,g8});end;end));(fD)(qq[hD],qq[hD+1],qq[hD+2]);Nq=hD;qq[hD]=fD;do pq=Hb[0X06];end;end;end;else local j6,n6=Hb[7],(Hb[6]);if n6==0 then else do Nq=j6+n6-0X1;end;end;local P6=Hb[1];local d6,X6=nil,nil;do if n6==0X001 then d6,X6=uN(qq[j6]());else d6,X6=uN(qq[j6](t(qq,j6+1,Nq)));end;end;if P6==1 then do Nq=j6-0X1;end;else if P6==0 then d6=d6+j6-0X00001;Nq=d6;else d6=j6+P6-2;Nq=d6+0x1;end;local sO=(0x0);for uc=j6,d6 do sO=sO+1;qq[uc]=X6[sO];end;end;end;elseif Xb>=74 then do if Xb~=0X4B then if Hb[0X1]==0X8C then do pq=pq-1;end;(Jq)[pq]={[6]=(Hb[6]-0X000014),[0x0004]=1,[7]=(Hb[0X00007]-0X014)};elseif Hb[1]==0x002D then pq=pq-0X1;do(Jq)[pq]={[7]=(Hb[7]-192),[6]=(Hb[6]-192),[0X00004]=0X000020};end;else repeat local gl,jl,Cl=zq,qq,Hb[0X7];if#gl>0X000 then local Eh={};for ZW,uW in B,gl do do for wY,UY in B,uW do do if not(UY[0x1]==jl and UY[0X2]>=Cl)then else local g5=UY[0x2];if not(not Eh[g5])then else(Eh)[g5]={jl[g5]};end;UY[0x1]=Eh[g5];do UY[2]=0x1;end;end;end;end;end;end;end;until true;end;else if qq[Hb[0X6]]~=qq[Hb[0X01]]then do pq=Hb[0x7];end;end;end;end;else qq[Hb[7]]=true;end;else if Xb<0x0004f then if Xb>=77 then do if Xb~=78 then do qq[Hb[0X7]]=#qq[Hb[0X6]];end;else local QK=(Hb[7]);qq[QK]=qq[QK](qq[QK+1],qq[QK+2]);Nq=QK;end;end;else(qq)[Hb[7]]=T(qq[Hb[6]],qq[Hb[1]]);end;else do if not(Xb<0x50)then do if Xb==81 then local WG=Hb[7];local TG,LG=qq[WG]();if not(TG)then else pq=Hb[0x006];(qq)[WG+3]=LG;end;else(qq)[Hb[0X0007]]=qq[Hb[6]]+qq[Hb[0X0001]];end;end;else qq[Hb[7]]=qq[Hb[0X0006]]~=Hb[5];end;end;end;end;else if not(Xb<88)then if not(Xb<91)then do if not(Xb<0x5c)then do if Xb==93 then repeat local Wk,Tk=zq,qq;if#Wk>0X00 then local Cy={};for Yu,su in B,Wk do do for Sl,cl in B,su do if cl[0X1]==Tk and cl[0X0002]>=0 then local JR=(cl[0X2]);do if not Cy[JR]then Cy[JR]={Tk[JR]};end;end;(cl)[1]=Cy[JR];do cl[0X2]=1;end;end;end;end;end;end;until true;return true,Hb[7],0X01;else(qq)[Hb[7]]=false;end;end;else local zu=(Hb[0X7]);qq[zu](qq[zu+1]);Nq=zu-0X1;end;end;elseif not(Xb<89)then do if Xb~=90 then local fx=qq[Hb[0X0006]]/qq[Hb[0X1]];(qq)[Hb[0X7]]=fx-fx%1;else(qq)[Hb[0X7]]=qq[Hb[0X6]]==qq[Hb[1]];end;end;else(qq)[Hb[7]]=qq[Hb[0x6]]/qq[Hb[1]];end;else do if Xb>=85 then if Xb<0X56 then do if qq[Hb[7]]then pq=Hb[0X006];end;end;else do if Xb==87 then do if not(not(qq[Hb[0X06]]<=Hb[5]))then else pq=Hb[0X7];end;end;else local wW=(Hb[0X00007]);local TW=Hb[0x6];Nq=wW+TW-0X1;repeat local KJ,EJ=zq,qq;do if#KJ>0 then local rG=({});for FU,pU in B,KJ do for My,Fy in B,pU do if not(Fy[0X00001]==EJ and Fy[0X0002]>=0X0000)then else local Cd=Fy[0X002];if not(not rG[Cd])then else rG[Cd]={EJ[Cd]};end;do Fy[1]=rG[Cd];end;(Fy)[0X0002]=1;end;end;end;end;end;until 0.8775926001518517;return true,wW,TW;end;end;end;else do if Xb>=0X53 then if Xb==84 then if not(qq[Hb[6]]<=qq[Hb[0X0001]])then else pq=Hb[0x00007];end;else local AD=Hb[7];qq[AD]=qq[AD](t(qq,AD+0x1,Nq));Nq=AD;end;else local dx=Hb[0X007];local fx,Ux,Xx=qq[dx]();if fx then qq[dx+0X1]=Ux;do(qq)[dx+2]=Xx;end;do pq=Hb[6];end;end;end;end;end;end;end;end;end;else do if Xb>=58 then if Xb>=0X000040 then if Xb>=0x43 then if not(Xb<68)then do if Xb~=0X45 then local Nr=(yq[Hb[0x0006]]);qq[Hb[0X07]]=Nr[1][Nr[2]];else if qq[Hb[6]]~=Hb[0x00005]then do pq=Hb[0X7];end;end;end;end;else local q2=Hb[7];(qq[q2])(t(qq,q2+0X01,Nq));Nq=q2-1;end;else if Xb<65 then qq[Hb[0X0007]]=w(qq[Hb[0X6]],qq[Hb[0X1]]);else do if Xb==66 then Nq=Hb[0X007];(qq[Nq])();Nq=Nq-1;else Nq=Hb[7];do(qq)[Nq]=qq[Nq]();end;end;end;end;end;else if Xb<61 then if not(Xb<59)then if Xb~=0X3c then if not(not(qq[Hb[6]]<=qq[Hb[1]]))then else pq=Hb[7];end;else if Hb[1]~=0X78 then(qq)[Hb[7]]=not qq[Hb[0X0006]];else pq=pq-0X1;Jq[pq]={[0x06]=(Hb[6]-158),[0x007]=(Hb[7]-158),[4]=49};end;end;else local E2=Hb[7];local u2=D(function(...)(l)();for u5 in...do(l)(true,u5);end;end);u2(qq[E2],qq[E2+0x01],qq[E2+0X0002]);do Nq=E2;end;(qq)[E2]=u2;pq=Hb[0X006];end;else if Xb<0X0003e then do(qq)[Hb[7]]=qq[Hb[6]]%qq[Hb[0X1]];end;else if Xb~=0X3F then do if not(qq[Hb[0x6]]<qq[Hb[0X0001]])then else do pq=Hb[7];end;end;end;else do(rq)[Hb[0X2]]=qq[Hb[7]];end;end;end;end;end;else if Xb>=0x34 then if Xb<0X37 then if not(Xb<0X35)then if Xb==54 then local gT=(Hb[6]);local vT=(qq[gT]);for AJ=gT+1,Hb[0X00001]do vT=vT..qq[AJ];end;(qq)[Hb[0X7]]=vT;else(qq)[Hb[0X7]]=qq[Hb[0x00006]]>=qq[Hb[1]];end;else(Sq)[Hb[6]]=qq[Hb[7]];end;elseif Xb<56 then local k4,q4=Hb[7],(qq[Hb[6]]);qq[k4+1]=q4;qq[k4]=q4[Hb[5]];else if Xb==0X39 then do qq[Hb[0X7]]=qq[Hb[6]]%Hb[0x5];end;else do for ZJ=Hb[0x7],Hb[6]do qq[ZJ]=nil;end;end;end;end;else do if Xb>=49 then do if Xb>=50 then if Xb~=51 then do if qq[Hb[0x6]]~=Hb[5]then else pq=Hb[7];end;end;else(qq)[Hb[0x007]]=rq[Hb[0X2]];end;else do if Hb[0x0001]~=240 then repeat local o3,B3=zq,qq;if not(#o3>0X0)then else local u8={};for jD,DD in B,o3 do do for QL,TL in B,DD do if not(TL[1]==B3 and TL[0x2]>=0x00)then else local wz=TL[2];if not(not u8[wz])then else do(u8)[wz]={B3[wz]};end;end;do TL[0X1]=u8[wz];end;TL[0X2]=0x0001;end;end;end;end;end;until'B';local PX=Hb[0X007];return false,PX,PX+Hb[0X6]-0X2;else pq=pq-1;do Jq[pq]={[0X004]=3,[0X0006]=(Hb[0X6]-0x000a1),[0X00007]=(Hb[0X07]-0XA1)};end;end;end;end;end;else if Xb~=48 then do(qq)[Hb[0X7]]=qq[Hb[6]]^qq[Hb[0X1]];end;else pq=Hb[6];end;end;end;end;end;end;end;end;else if not(Xb<23)then if not(Xb<0X23)then if Xb<0X29 then if Xb<38 then if not(Xb<36)then if Xb==0x25 then(qq)[Hb[0x7]]=qq[Hb[6]][qq[Hb[0X1]]];else do if qq[Hb[0x6]]~=qq[Hb[1]]then else pq=Hb[0X7];end;end;end;else do qq[Hb[0X7]][Hb[2]]=Hb[5];end;end;else do if not(Xb>=0X27)then qq[Hb[7]]=Hb[2];else if Xb~=0X28 then qq[Hb[7]]=qq[Hb[0x6]]>qq[Hb[1]];else local Bl=(Hb[7]);Nq=Bl+Hb[6]-1;(qq)[Bl]=qq[Bl](t(qq,Bl+1,Nq));Nq=Bl;end;end;end;end;else if not(Xb>=0X2c)then do if Xb<42 then local lj=Hb[7];qq[lj](qq[lj+0X1],qq[lj+0X2]);Nq=lj-1;else if Xb==43 then qq[Hb[7]]=aN[Hb[6]];else local dd=(Hb[7]);local ed,Yd=qq[dd]();do if ed then(qq)[dd+1]=Yd;do pq=Hb[0X6];end;end;end;end;end;end;else if not(Xb>=0X2d)then local mq=(Hb[0X00007]);local Aq=D(function(...)(l)();for p7,U7 in...do(l)(true,p7,U7);end;end);Aq(qq[mq],qq[mq+1],qq[mq+0X2]);do Nq=mq;end;do qq[mq]=Aq;end;pq=Hb[6];else if Xb~=46 then qq[Hb[0x7]]=-qq[Hb[6]];else qq[Hb[0X7]]=qq[Hb[0x06]]-qq[Hb[0X1]];end;end;end;end;else if Xb<29 then if not(Xb>=26)then do if Xb<0X000018 then qq[Hb[0x7]]=Sq[Hb[0X00006]];else if Xb==0X19 then qq[Hb[7]]=K(qq[Hb[6]],qq[Hb[1]]);else local oX=Hb[0x7];(qq)[oX]=qq[oX](qq[oX+1]);do Nq=oX;end;end;end;end;else if Xb<0X1B then(qq)[Hb[7]]=Z(qq[Hb[6]]);else if Xb~=28 then do repeat local pE,oE=zq,qq;do if not(#pE>0x0)then else local FZ=({});for WG,bG in B,pE do for dU,gU in B,bG do if gU[1]==oE and gU[2]>=0 then local OS=(gU[2]);if not FZ[OS]then(FZ)[OS]={oE[OS]};end;do gU[1]=FZ[OS];end;(gU)[2]=0X1;end;end;end;end;end;until true;end;return true,Hb[7],0X0;else local ok=(yq[Hb[6]]);ok[1][ok[2]]=qq[Hb[7]];end;end;end;else if not(Xb<0X20)then if not(Xb>=33)then local mf=Hb[0X7];local Xf=(tq-aq);if Xf<0x00 then Xf=-0X1;end;for ut=mf,mf+Xf do(qq)[ut]=Iq[aq+(ut-mf)+0X1];end;Nq=mf+Xf;else if Xb==34 then qq[Hb[7]][qq[Hb[0X0006]]]=Hb[0X5];else do qq[Hb[7]]=qq[Hb[6]]~=qq[Hb[1]];end;end;end;else if not(Xb>=0X01e)then do(qq)[Hb[0X00007]]=G(qq[Hb[6]],qq[Hb[1]]);end;else if Xb~=0x1F then qq[Hb[0x00007]]=qq[Hb[6]]<=qq[Hb[0x01]];else local k0=(Hb[7]);local r0=(qq[k0]);local l0=(qq[k0+2]);local E0=(qq[k0+1]);(qq)[k0]=D(function()for Ji=r0,E0,l0 do l(true,Ji);end;end);pq=Hb[0X6];end;end;end;end;end;elseif not(Xb<11)then if not(Xb>=17)then if Xb<14 then do if Xb<12 then if Hb[1]==0X32 then do pq=pq-0X001;end;(Jq)[pq]={[0X7]=(Hb[0x7]-0X8f),[6]=(Hb[0X6]-0X8f),[0X04]=0X4d};else do repeat local RG,FG=zq,qq;if not(#RG>0)then else local BU=({});for i1,Q1 in B,RG do for wz,gz in B,Q1 do if not(gz[0x1]==FG and gz[2]>=0)then else local Yy=gz[0x2];if not BU[Yy]then(BU)[Yy]={FG[Yy]};end;(gz)[1]=BU[Yy];gz[0X2]=1;end;end;end;end;until true;end;local j3=(Hb[7]);return false,j3,j3;end;else do if Xb==13 then qq[Hb[0X7]]={};else qq[Hb[0X00007]]=qq[Hb[6]][Hb[5]];end;end;end;end;else if Xb>=15 then do if Xb==16 then qq[Hb[7]]=qq[Hb[0X06]]<qq[Hb[0X0001]];else qq[Hb[7]]={t({},0x1,Hb[6])};end;end;else do if not(qq[Hb[0X06]]<qq[Hb[0X1]])then do pq=Hb[0X7];end;end;end;end;end;else if not(Xb<0x14)then if not(Xb<0X0015)then if Xb~=0x16 then(qq[Hb[0X7]])[qq[Hb[0X6]]]=qq[Hb[1]];else repeat local ea,Ba=zq,(qq);if#ea>0 then local SK=({});for rU,RU in B,ea do for KS,yS in B,RU do if yS[0X1]==Ba and yS[2]>=0X0 then local PB=yS[2];if not SK[PB]then(SK)[PB]={Ba[PB]};end;(yS)[0X1]=SK[PB];do yS[2]=1;end;end;end;end;end;until true;return;end;else local XY=Hb[0x6];do qq[Hb[7]]=qq[XY]..qq[XY+1];end;end;else if Xb>=18 then do if Xb==19 then local WK=(Hb[0X7]);do Nq=WK+Hb[0x6]-1;end;(qq[WK])(t(qq,WK+1,Nq));Nq=WK-1;else(qq)[Hb[0x7]]=Hb[0X02];end;end;else(qq)[Hb[0X7]]=qq[Hb[6]]*qq[Hb[0X1]];end;end;end;else if not(Xb<0X0005)then if Xb<8 then if Xb>=0X00006 then if Xb~=0X7 then local tW=Hb[0X7];local YW,WW=qq[tW],(Hb[1]-0X00001)*50;for ze=1,Hb[6]do YW[WW+ze]=qq[tW+ze];end;else do qq[Hb[0X7]][Hb[0X2]]=qq[Hb[1]];end;end;else local Pd=(nil);local Hd=(xq[Hb[6]]);local sd=(Hd[1]);local Vd=(#sd);if not(Vd>0)then else Pd={};for yF=1,Vd do local IF=(sd[yF]);do if IF[1]~=0X0 then(Pd)[yF-1]=yq[IF[0x2]];else(Pd)[yF-1]={qq,IF[0X2]};end;end;end;b(zq,Pd);end;qq[Hb[0x7]]=oN(rq,Hd,Pd);end;else if Xb<0X00009 then local Hc,Mc=Hb[0X7],(Hb[0X01]-0X001)*0X32;local Zc=qq[Hc];for vw=0x1,Nq-Hc do Zc[Mc+vw]=qq[Hc+vw];end;else do if Xb~=0xA then if Hb[0X1]~=221 then local uz=(Hb[0X7]);for cx=uz,uz+(Hb[6]-0x1)do(qq)[cx]=Iq[aq+(cx-uz)+0X1];end;else do pq=pq-0X01;end;(Jq)[pq]={[0X6]=(Hb[0X6]-0X000f7),[4]=0X0001,[0X7]=(Hb[7]-247)};end;else do aN[Hb[6]]=qq[Hb[0X7]];end;end;end;end;end;else do if Xb>=2 then if Xb<3 then if Hb[1]==0X000083 then do pq=pq-1;end;Jq[pq]={[7]=(Hb[7]-92),[0X004]=3,[0x6]=(Hb[0X6]-92)};else if not(not qq[Hb[0x7]])then else pq=Hb[0X06];end;end;else if Xb==4 then if Hb[0X1]~=0X5 then(qq)[Hb[0X7]]=Iq[aq+0X001];else pq=pq-0x1;Jq[pq]={[0X7]=(Hb[0x00007]-0X23),[4]=22,[0X6]=(Hb[6]-0x00023)};end;else(qq)[Hb[7]]=qq[Hb[0X6]];end;end;else if Xb~=1 then do if Hb[0X00001]~=0X94 then repeat local MT,CT=zq,qq;if#MT>0X0 then local RR=({});for bE,EE in B,MT do for E9,Q9 in B,EE do if not(Q9[0x0001]==CT and Q9[2]>=0X0)then else local Rm=(Q9[0X02]);if not(not RR[Rm])then else do(RR)[Rm]={CT[Rm]};end;end;do(Q9)[0X1]=RR[Rm];end;Q9[0X2]=1;end;end;end;end;until true;do return false,Hb[0x7],Nq;end;else do pq=pq-1;end;(Jq)[pq]={[0x007]=(Hb[0X7]-36),[0X4]=22,[6]=(Hb[6]-36)};end;end;else if Hb[0x1]~=250 then qq[Hb[0X0007]]=nil;else pq=pq-1;Jq[pq]={[4]=0X0,[0X6]=(Hb[6]-231),[7]=(Hb[7]-0Xe7)};end;end;end;end;end;end;end;end;end;end);if not(Lq)then do if R(nq)~="string"then(o)(nq,0);else if not(W(nq,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if W(nq,'\094.\045\058\037\100\043\058\032')then(o)("Luraph Script:"..(fq[pq-1]or"(internal)")..": "..a(nq),0);else o(nq,0X0000);end;end;end;else do if nq then do if gq==1 then return qq[Wq]();else do return qq[Wq](t(qq,Wq+1,Nq));end;end;end;else if Wq then do return t(qq,Wq,gq);end;end;end;end;end;end;end;do if not(k)then else k(Vq,Xq);end;end;do return Vq;end;end;YM=3;end;else VN=fN();do YM=0X4;end;end;else do if YM<=0X0003 then function fN()local W3,K3,V3,J3,u3,L3,R3,e3=1,nil,nil,nil,nil,nil,nil,nil;for qE=0x0,0x07 do if qE<=3 then do if not(qE<=1)then do if qE==0x2 then J3=K3[0X2];else do u3={};end;end;end;else if qE~=0X000 then V3={};else K3={dN,{},dN,nil,dN,{},dN,{},dN};end;end;end;elseif not(qE<=0X00005)then if qE~=0X006 then do e3=M();end;else do for nk=0,L3-0X1 do(J3)[nk]=fN();end;end;end;else if qE~=0X0004 then R3={};else L3=M()-46828;end;end;end;for gM=1,e3 do local zM=(M());local IM,AM,sM=1,nil,nil;while IM<=0X0002 do if not(IM<=0X0)then if IM==1 then AM=M();IM=0x0;else do for ZT=zM,AM do(K3[0X06])[ZT]=sM;end;end;IM=3;end;else do sM=M();end;IM=2;end;end;end;local h3,f3,N3,M3=1,nil,nil,(nil);while'}AXO\099'do do if h3<=1 then if h3==0 then N3=i();h3=0X4;else do K3[0X0000C]=M();end;h3=0x2;end;else if h3<=0X2 then K3[0X7]=r();h3=3;else if h3~=3 then M3=i()~=0X00;break;else f3=M()-0X15511;h3=0x0;end;end;end;end;end;for Vd=0X1,f3 do local Hd=(i());local Dd,Ed,Wd=dN,0X2,(nil);repeat do if not(Ed<=0X02)then if not(Ed<=3)then if Ed==0x4 then(V3)[W3]=Wd;do Ed=5;end;else W3=W3+0x1;Ed=0;end;else if Hd==FN then Dd=true;elseif Hd==2 then Dd=y()+M();elseif Hd==192 then Dd=y();elseif Hd==0X0000aE then Dd=O();elseif Hd==0Xa5 then do Dd=PN;end;elseif Hd==79 then do Dd=f(nN(N3),EN);end;elseif Hd==rN then Dd=f(nN(N3),EN);else if Hd==242 then do Dd=O();end;elseif Hd==31 then Dd=f(nN(N3),2);elseif Hd==155 then Dd=f(nN(N3),y()+M());else if Hd==0X0D2 then Dd=f(nN(N3),i());end;end;end;do Ed=0X01;end;end;else if Ed<=0x00 then if not(M3)then else local He=(0X00000);while He<0X02 do if He~=0x0 then RN=RN+0X1;He=2;else do(vN)[RN]=Wd;end;He=0X1;end;end;end;do Ed=6;end;else if Ed==1 then do Wd={Dd,{}};end;Ed=4;else do R3[Vd-0x1]=W3;end;Ed=0x3;end;end;end;end;until Ed>=6;end;K3[0X11]=i();h3=1;local x3=nil;repeat if h3==0X0 then x3=M()-87453;break;else(K3)[14]=i();h3=0;end;until false;local B3=K3[0X00008];for iV=1,x3 do B3[iV]={[0X0003]=i(),[1]=H(),[0X7]=H(),[2]=i(),[4]=r(),[0X6]=H(),[0x5]=i()};end;h3=2;local m3=(nil);do repeat do if h3<=1 then if h3~=0 then do(K3)[0X005]=d(m3,BN,1)~=0x00;end;h3=0X003;else do for tl=1,x3 do local Kl=nil;local gl=1;repeat do if gl==0X0 then for EC,QC in HN(F)do local nC,KC=nil,nil;local ZC=(0X00000);while ZC~=0X2 do if ZC==0 then do nC=P[QC];end;ZC=1;else do KC=Kl[nC];end;do ZC=0X00002;end;end;end;if KC==0Xb then local od,Hd,Xd=0,nil,(nil);repeat if not(od<=0X0)then if od==1 then do if Xd then local r_=nil;local F_=0;repeat if not(F_<=0X0)then if F_==0X00001 then r_[#r_+0X1]={Kl,nC};F_=0X3;else r_=Xd[0X00002];do F_=1;end;end;else do(Kl)[nC]=Xd[0X1];end;do F_=2;end;end;until F_>=3;end;end;do break;end;else Xd=V3[Hd];od=1;end;else do Hd=R3[Kl[QC]];end;od=0X2;end;until(false);elseif KC~=0xE then else Kl[QC]=tl+Kl[QC]+1;end;end;gl=0x2;else Kl=K3[0X00008][tl];do gl=0X0000;end;end;end;until gl>0X1;end;end;h3=4;end;else if h3<=0X2 then do(K3)[9]=r();end;h3=0X00000;else if h3==3 then(K3)[4]=d(m3,2,1)~=0X0;do h3=0X5;end;else m3=i();h3=0X001;end;end;end;end;until h3>=5;end;do for di=0,0X002 do if not(di<=0)then do if di~=1 then for GZ=0X00001,r()do(u3)[GZ]={i(),r()};end;else K3[0X01]=u3;end;end;else(K3)[0X00A]=i();end;end;end;(K3)[15]=M();do K3[DN]=r();end;for tH=0X0,0X1 do if tH==0 then(K3)[0Xe]=i();else do return K3;end;end;end;end;YM=0X00000;else if YM==0X00004 then aN[2]=vN;YM=0x5;else do vN=nil;end;YM=0x6;end;end;end;end;until YM>0X5;end;return oN(N,VN,dN)(...);end)(0X0a,table.insert,tostring,0x0d,0Xc,65536,nil,82,ipairs,string.rep,string,error,select,222,2,0x00000,"bn\111\116",0Xb,_ENV,setfenv,rawget,7997,0X48,'\114sh\105f\116',7,getfenv,9,4,coroutine.wrap,0X1,6,false,pcall,14,0x3,8,bit,rawset,setmetatable,tonumber,string.byte,{14491,0X0036095B68,0XF60A33dA,3922090111,187474344,0x0005254355e,3394277045,3026576381,3162058157},...);